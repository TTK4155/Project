
Embedded.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000122  00800100  00001afe  00001b92  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00001afe  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000010  00800222  00800222  00001cb4  2**0
                  ALLOC
  3 .comment      0000005c  00000000  00000000  00001cb4  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  00001d10  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000268  00000000  00000000  00001d4c  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   000026fb  00000000  00000000  00001fb4  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 000011d6  00000000  00000000  000046af  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00001498  00000000  00000000  00005885  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  000005c8  00000000  00000000  00006d20  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00000896  00000000  00000000  000072e8  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    000017e0  00000000  00000000  00007b7e  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000258  00000000  00000000  0000935e  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 d0 03 	jmp	0x7a0	; 0x7a0 <__ctors_end>
       4:	0c 94 ed 03 	jmp	0x7da	; 0x7da <__bad_interrupt>
       8:	0c 94 ed 03 	jmp	0x7da	; 0x7da <__bad_interrupt>
       c:	0c 94 2f 08 	jmp	0x105e	; 0x105e <__vector_3>
      10:	0c 94 ed 03 	jmp	0x7da	; 0x7da <__bad_interrupt>
      14:	0c 94 ed 03 	jmp	0x7da	; 0x7da <__bad_interrupt>
      18:	0c 94 ed 03 	jmp	0x7da	; 0x7da <__bad_interrupt>
      1c:	0c 94 ed 03 	jmp	0x7da	; 0x7da <__bad_interrupt>
      20:	0c 94 ed 03 	jmp	0x7da	; 0x7da <__bad_interrupt>
      24:	0c 94 ed 03 	jmp	0x7da	; 0x7da <__bad_interrupt>
      28:	0c 94 ed 03 	jmp	0x7da	; 0x7da <__bad_interrupt>
      2c:	0c 94 ed 03 	jmp	0x7da	; 0x7da <__bad_interrupt>
      30:	0c 94 ed 03 	jmp	0x7da	; 0x7da <__bad_interrupt>
      34:	0c 94 ed 03 	jmp	0x7da	; 0x7da <__bad_interrupt>
      38:	0c 94 ed 03 	jmp	0x7da	; 0x7da <__bad_interrupt>
      3c:	0c 94 ed 03 	jmp	0x7da	; 0x7da <__bad_interrupt>
      40:	0c 94 ed 03 	jmp	0x7da	; 0x7da <__bad_interrupt>
      44:	0c 94 ed 03 	jmp	0x7da	; 0x7da <__bad_interrupt>
      48:	0c 94 ed 03 	jmp	0x7da	; 0x7da <__bad_interrupt>
      4c:	0c 94 ed 03 	jmp	0x7da	; 0x7da <__bad_interrupt>
      50:	0c 94 ed 03 	jmp	0x7da	; 0x7da <__bad_interrupt>
      54:	0c 94 ed 03 	jmp	0x7da	; 0x7da <__bad_interrupt>
      58:	0c 94 ed 03 	jmp	0x7da	; 0x7da <__bad_interrupt>
      5c:	0c 94 ed 03 	jmp	0x7da	; 0x7da <__bad_interrupt>
      60:	0c 94 ed 03 	jmp	0x7da	; 0x7da <__bad_interrupt>
      64:	0c 94 ed 03 	jmp	0x7da	; 0x7da <__bad_interrupt>
      68:	0c 94 ed 03 	jmp	0x7da	; 0x7da <__bad_interrupt>
      6c:	0c 94 ed 03 	jmp	0x7da	; 0x7da <__bad_interrupt>

00000070 <__trampolines_end>:
	...
      90:	06 09       	sbc	r16, r6
      92:	09 06       	cpc	r0, r25
	...
      b0:	0c 12       	cpse	r0, r28
      b2:	21 21       	and	r18, r1
      b4:	12 0c       	add	r1, r2
	...
      ce:	00 00       	nop
      d0:	3c 42       	sbci	r19, 0x2C	; 44
      d2:	81 81       	ldd	r24, Z+1	; 0x01
      d4:	81 81       	ldd	r24, Z+1	; 0x01
      d6:	42 3c       	cpi	r20, 0xC2	; 194
	...
      f0:	78 84       	ldd	r7, Y+8	; 0x08
      f2:	02 01       	movw	r0, r4
      f4:	01 01       	movw	r0, r2
      f6:	01 02       	muls	r16, r17
      f8:	84 78       	andi	r24, 0x84	; 132
	...
     102:	01 02       	muls	r16, r17
     104:	02 02       	muls	r16, r18
     106:	02 01       	movw	r0, r4
	...
     110:	f8 04       	cpc	r15, r8
     112:	02 01       	movw	r0, r4
     114:	01 01       	movw	r0, r2
     116:	01 01       	movw	r0, r2
     118:	01 02       	muls	r16, r17
     11a:	04 f8       	bld	r0, 4
     11c:	00 00       	nop
     11e:	00 00       	nop
     120:	01 02       	muls	r16, r17
     122:	04 08       	sbc	r0, r4
     124:	08 08       	sbc	r0, r8
     126:	08 08       	sbc	r0, r8
     128:	08 04       	cpc	r0, r8
     12a:	02 01       	movw	r0, r4
     12c:	00 00       	nop
     12e:	00 00       	nop
     130:	f0 08       	sbc	r15, r0
     132:	04 02       	muls	r16, r20
     134:	01 01       	movw	r0, r2
     136:	01 01       	movw	r0, r2
     138:	01 01       	movw	r0, r2
     13a:	02 04       	cpc	r0, r2
     13c:	08 f0       	brcs	.+2      	; 0x140 <__trampolines_end+0xd0>
     13e:	00 00       	nop
     140:	03 04       	cpc	r0, r3
     142:	08 10       	cpse	r0, r8
     144:	20 20       	and	r2, r0
     146:	20 20       	and	r2, r0
     148:	20 20       	and	r2, r0
     14a:	10 08       	sbc	r1, r0
     14c:	04 03       	mulsu	r16, r20
	...

00000150 <font4>:
     150:	00 00 00 00 00 5c 00 00 0c 00 0c 00 7c 28 7c 28     .....\......|(|(
     160:	58 dc 68 00 24 10 48 00 28 54 28 40 00 0c 00 00     X.h.$.H.(T(@....
     170:	00 78 84 00 84 78 00 00 54 38 54 00 10 7c 10 00     .x...x..T8T..|..
     180:	80 40 00 00 10 10 10 00 00 40 00 00 60 10 0c 00     .@.......@..`...
     190:	38 54 38 00 48 7c 40 00 48 64 58 00 44 54 2c 00     8T8.H|@.HdX.DT,.
     1a0:	1c 10 7c 00 5c 54 24 00 38 54 24 00 64 14 0c 00     ..|.\T$.8T$.d...
     1b0:	68 54 2c 00 48 54 38 00 00 48 00 00 80 48 00 00     hT,.HT8..H...H..
     1c0:	10 28 44 00 28 28 28 00 44 28 10 00 04 54 08 00     .(D.(((.D(...T..
     1d0:	38 44 5c 00 78 14 78 00 7c 54 28 00 38 44 28 00     8D\.x.x.|T(.8D(.
     1e0:	7c 44 38 00 7c 54 44 00 7c 14 04 00 38 44 74 00     |D8.|TD.|...8Dt.
     1f0:	7c 10 7c 00 44 7c 44 00 20 40 3c 00 7c 10 6c 00     |.|.D|D. @<.|.l.
     200:	7c 40 40 00 7c 18 7c 00 78 10 3c 00 38 44 38 00     |@@.|.|.x.<.8D8.
     210:	7c 14 08 00 38 44 b8 00 7c 14 68 00 48 54 24 00     |...8D..|.h.HT$.
     220:	04 7c 04 00 7c 40 7c 00 3c 60 3c 00 7c 30 7c 00     .|..|@|.<`<.|0|.
     230:	6c 10 6c 00 0c 70 0c 00 64 54 4c 00 00 7c 44 00     l.l..p..dTL..|D.
     240:	0c 10 60 00 44 7c 00 00 08 04 08 00 80 80 80 00     ..`.D|..........
     250:	00 04 08 00 30 48 78 00 7c 48 30 00 30 48 48 00     ....0Hx.|H0.0HH.
     260:	30 48 7c 00 30 68 50 00 10 78 14 00 90 a8 78 00     0H|.0hP..x....x.
     270:	7c 08 70 00 50 74 40 00 80 80 74 00 7c 10 68 00     |.p.Pt@...t.|.h.
     280:	44 7c 40 00 78 10 78 00 78 08 70 00 30 48 30 00     D|@.x.x.x.p.0H0.
     290:	f8 28 10 00 30 48 f8 00 78 10 08 00 50 58 28 00     .(..0H..x...PX(.
     2a0:	08 3c 48 00 38 40 78 00 38 40 38 00 78 20 78 00     .<H.8@x.8@8.x x.
     2b0:	48 30 48 00 98 a0 78 00 48 68 58 00 10 78 84 00     H0H...x.HhX..x..
     2c0:	00 7c 00 00 84 78 10 00 08 04 08 04                 .|...x......

000002cc <font5>:
     2cc:	00 00 00 00 00 00 00 5f 00 00 00 07 00 07 00 14     ......._........
     2dc:	7f 14 7f 14 24 2a 7f 2a 12 23 13 08 64 62 36 49     ....$*.*.#..db6I
     2ec:	55 22 50 00 05 03 00 00 00 1c 22 41 00 00 41 22     U"P......."A..A"
     2fc:	1c 00 08 2a 1c 2a 08 08 08 3e 08 08 00 50 30 00     ...*.*...>...P0.
     30c:	00 08 08 08 08 08 00 60 60 00 00 20 10 08 04 02     .......``.. ....
     31c:	3e 51 49 45 3e 00 42 7f 40 00 42 61 51 49 46 21     >QIE>.B.@.BaQIF!
     32c:	41 45 4b 31 18 14 12 7f 10 27 45 45 45 39 3c 4a     AEK1.....'EEE9<J
     33c:	49 49 30 01 71 09 05 03 36 49 49 49 36 06 49 49     II0.q...6III6.II
     34c:	29 1e 00 36 36 00 00 00 56 36 00 00 00 08 14 22     )..66...V6....."
     35c:	41 14 14 14 14 14 41 22 14 08 00 02 01 51 09 06     A.....A".....Q..
     36c:	32 49 79 41 3e 7e 11 11 11 7e 7f 49 49 49 36 3e     2IyA>~...~.III6>
     37c:	41 41 41 22 7f 41 41 22 1c 7f 49 49 49 41 7f 09     AAA".AA"..IIIA..
     38c:	09 01 01 3e 41 41 51 32 7f 08 08 08 7f 00 41 7f     ...>AAQ2......A.
     39c:	41 00 20 40 41 3f 01 7f 08 14 22 41 7f 40 40 40     A. @A?...."A.@@@
     3ac:	40 7f 02 04 02 7f 7f 04 08 10 7f 3e 41 41 41 3e     @..........>AAA>
     3bc:	7f 09 09 09 06 3e 41 51 21 5e 7f 09 19 29 46 46     .....>AQ!^...)FF
     3cc:	49 49 49 31 01 01 7f 01 01 3f 40 40 40 3f 1f 20     III1.....?@@@?. 
     3dc:	40 20 1f 7f 20 18 20 7f 63 14 08 14 63 03 04 78     @ .. . .c...c..x
     3ec:	04 03 61 51 49 45 43 00 00 7f 41 41 02 04 08 10     ..aQIEC...AA....
     3fc:	20 41 41 7f 00 00 04 02 01 02 04 40 40 40 40 40      AA........@@@@@
     40c:	00 01 02 04 00 20 54 54 54 78 7f 48 44 44 38 38     ..... TTTx.HDD88
     41c:	44 44 44 20 38 44 44 48 7f 38 54 54 54 18 08 7e     DDD 8DDH.8TTT..~
     42c:	09 01 02 08 14 54 54 3c 7f 08 04 04 78 00 44 7d     .....TT<....x.D}
     43c:	40 00 20 40 44 3d 00 00 7f 10 28 44 00 41 7f 40     @. @D=....(D.A.@
     44c:	00 7c 04 18 04 78 7c 08 04 04 78 38 44 44 44 38     .|...x|...x8DDD8
     45c:	7c 14 14 14 08 08 14 14 18 7c 7c 08 04 04 08 48     |........||....H
     46c:	54 54 54 20 04 3f 44 40 20 3c 40 40 20 7c 1c 20     TTT .?D@ <@@ |. 
     47c:	40 20 1c 3c 40 30 40 3c 44 28 10 28 44 0c 50 50     @ .<@0@<D(.(D.PP
     48c:	50 3c 44 64 54 4c 44 00 08 36 41 00 00 00 7f 00     P<DdTLD..6A.....
     49c:	00 00 41 36 08 00 02 01 03 02 01                    ..A6.......

000004a7 <font8>:
	...
     4af:	00 06 5f 5f 06 00 00 00 00 07 07 00 07 07 00 00     ..__............
     4bf:	14 7f 7f 14 7f 7f 14 00 24 2e 6b 6b 3a 12 00 00     ........$.kk:...
     4cf:	46 66 30 18 0c 66 62 00 30 7a 4f 5d 37 7a 48 00     Ff0..fb.0zO]7zH.
     4df:	04 07 03 00 00 00 00 00 00 1c 3e 63 41 00 00 00     ..........>cA...
     4ef:	00 41 63 3e 1c 00 00 00 08 2a 3e 1c 1c 3e 2a 08     .Ac>.....*>..>*.
     4ff:	08 08 3e 3e 08 08 00 00 00 a0 e0 60 00 00 00 00     ..>>.......`....
     50f:	08 08 08 08 08 08 00 00 00 00 60 60 00 00 00 00     ..........``....
     51f:	60 30 18 0c 06 03 01 00 3e 7f 59 4d 7f 3e 00 00     `0......>.YM.>..
     52f:	42 42 7f 7f 40 40 00 00 62 73 59 49 6f 66 00 00     BB..@@..bsYIof..
     53f:	22 63 49 49 7f 36 00 00 18 1c 16 13 7f 7f 10 00     "cII.6..........
     54f:	27 67 45 45 7d 39 00 00 3c 7e 4b 49 79 30 00 00     'gEE}9..<~KIy0..
     55f:	03 63 71 19 0f 07 00 00 36 7f 49 49 7f 36 00 00     .cq.....6.II.6..
     56f:	06 4f 49 69 3f 1e 00 00 00 00 6c 6c 00 00 00 00     .OIi?.....ll....
     57f:	00 a0 ec 6c 00 00 00 00 08 1c 36 63 41 00 00 00     ...l......6cA...
     58f:	14 14 14 14 14 14 00 00 00 41 63 36 1c 08 00 00     .........Ac6....
     59f:	02 03 51 59 0f 06 00 00 3e 7f 41 5d 5d 1f 1e 00     ..QY....>.A]]...
     5af:	7c 7e 13 13 7e 7c 00 00 41 7f 7f 49 49 7f 36 00     |~..~|..A..II.6.
     5bf:	1c 3e 63 41 41 63 22 00 41 7f 7f 41 63 7f 1c 00     .>cAAc".A..Ac...
     5cf:	41 7f 7f 49 5d 41 63 00 41 7f 7f 49 1d 01 03 00     A..I]Ac.A..I....
     5df:	1c 3e 63 41 51 73 72 00 7f 7f 08 08 7f 7f 00 00     .>cAQsr.........
     5ef:	00 41 7f 7f 41 00 00 00 30 70 40 41 7f 3f 01 00     .A..A...0p@A.?..
     5ff:	41 7f 7f 08 1c 77 63 00 41 7f 7f 41 40 60 70 00     A....wc.A..A@`p.
     60f:	7f 7f 06 0c 06 7f 7f 00 7f 7f 06 0c 18 7f 7f 00     ................
     61f:	1c 3e 63 41 63 3e 1c 00 41 7f 7f 49 09 0f 06 00     .>cAc>..A..I....
     62f:	1e 3f 21 71 7f 5e 00 00 41 7f 7f 19 39 6f 46 00     .?!q.^..A...9oF.
     63f:	26 67 4d 59 7b 32 00 00 03 41 7f 7f 41 03 00 00     &gMY{2...A..A...
     64f:	7f 7f 40 40 7f 7f 00 00 1f 3f 60 60 3f 1f 00 00     ..@@.....?``?...
     65f:	7f 7f 30 18 30 7f 7f 00 63 77 1c 08 1c 77 63 00     ..0.0...cw...wc.
     66f:	07 4f 78 78 4f 07 00 00 67 73 59 4d 47 63 71 00     .OxxO...gsYMGcq.
     67f:	00 7f 7f 41 41 00 00 00 01 03 06 0c 18 30 60 00     ...AA........0`.
     68f:	00 41 41 7f 7f 00 00 00 08 0c 06 03 06 0c 08 00     .AA.............
     69f:	80 80 80 80 80 80 80 80 00 00 03 07 04 00 00 00     ................
     6af:	20 74 54 54 3c 78 40 00 41 3f 7f 44 44 7c 38 00      tTT<x@.A?.DD|8.
     6bf:	38 7c 44 44 6c 28 00 00 30 78 48 49 3f 7f 40 00     8|DDl(..0xHI?.@.
     6cf:	38 7c 54 54 5c 18 00 00 48 7e 7f 49 03 02 00 00     8|TT\...H~.I....
     6df:	98 bc a4 a4 f8 7c 04 00 41 7f 7f 08 04 7c 78 00     .....|..A....|x.
     6ef:	00 44 7d 7d 40 00 00 00 40 c4 84 fd 7d 00 00 00     .D}}@...@...}...
     6ff:	41 7f 7f 10 38 6c 44 00 00 41 7f 7f 40 00 00 00     A...8lD..A..@...
     70f:	7c 7c 0c 18 0c 7c 78 00 7c 7c 04 04 7c 78 00 00     ||...|x.||..|x..
     71f:	38 7c 44 44 7c 38 00 00 84 fc f8 a4 24 3c 18 00     8|DD|8......$<..
     72f:	18 3c 24 a4 f8 fc 84 00 44 7c 78 44 1c 18 00 00     .<$.....D|xD....
     73f:	48 5c 54 54 74 24 00 00 00 04 3e 7f 44 24 00 00     H\TTt$....>.D$..
     74f:	3c 7c 40 40 3c 7c 40 00 1c 3c 60 60 3c 1c 00 00     <|@@<|@..<``<...
     75f:	3c 7c 60 30 60 7c 3c 00 44 6c 38 10 38 6c 44 00     <|`0`|<.Dl8.8lD.
     76f:	9c bc a0 a0 fc 7c 00 00 4c 64 74 5c 4c 64 00 00     .....|..Ldt\Ld..
     77f:	08 08 3e 77 41 41 00 00 00 00 00 77 77 00 00 00     ..>wAA.....ww...
     78f:	41 41 77 3e 08 08 00 00 02 03 01 03 02 03 01 00     AAw>............
	...

000007a0 <__ctors_end>:
     7a0:	11 24       	eor	r1, r1
     7a2:	1f be       	out	0x3f, r1	; 63
     7a4:	cf ef       	ldi	r28, 0xFF	; 255
     7a6:	d4 e0       	ldi	r29, 0x04	; 4
     7a8:	de bf       	out	0x3e, r29	; 62
     7aa:	cd bf       	out	0x3d, r28	; 61

000007ac <__do_copy_data>:
     7ac:	12 e0       	ldi	r17, 0x02	; 2
     7ae:	a0 e0       	ldi	r26, 0x00	; 0
     7b0:	b1 e0       	ldi	r27, 0x01	; 1
     7b2:	ee ef       	ldi	r30, 0xFE	; 254
     7b4:	fa e1       	ldi	r31, 0x1A	; 26
     7b6:	02 c0       	rjmp	.+4      	; 0x7bc <__do_copy_data+0x10>
     7b8:	05 90       	lpm	r0, Z+
     7ba:	0d 92       	st	X+, r0
     7bc:	a2 32       	cpi	r26, 0x22	; 34
     7be:	b1 07       	cpc	r27, r17
     7c0:	d9 f7       	brne	.-10     	; 0x7b8 <__do_copy_data+0xc>

000007c2 <__do_clear_bss>:
     7c2:	22 e0       	ldi	r18, 0x02	; 2
     7c4:	a2 e2       	ldi	r26, 0x22	; 34
     7c6:	b2 e0       	ldi	r27, 0x02	; 2
     7c8:	01 c0       	rjmp	.+2      	; 0x7cc <.do_clear_bss_start>

000007ca <.do_clear_bss_loop>:
     7ca:	1d 92       	st	X+, r1

000007cc <.do_clear_bss_start>:
     7cc:	a2 33       	cpi	r26, 0x32	; 50
     7ce:	b2 07       	cpc	r27, r18
     7d0:	e1 f7       	brne	.-8      	; 0x7ca <.do_clear_bss_loop>
     7d2:	0e 94 85 08 	call	0x110a	; 0x110a <main>
     7d6:	0c 94 7d 0d 	jmp	0x1afa	; 0x1afa <_exit>

000007da <__bad_interrupt>:
     7da:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000007de <adc_read>:
 */ 
#include "ADC.h"


char adc_read(uint8_t channel) {
	if (channel <= 4 && channel > 0) {
     7de:	9f ef       	ldi	r25, 0xFF	; 255
     7e0:	98 0f       	add	r25, r24
     7e2:	94 30       	cpi	r25, 0x04	; 4
     7e4:	50 f4       	brcc	.+20     	; 0x7fa <adc_read+0x1c>
		char *p = ADC_OFFSET;
		*p = channel+3;
     7e6:	e0 e0       	ldi	r30, 0x00	; 0
     7e8:	f4 e1       	ldi	r31, 0x14	; 20
     7ea:	8d 5f       	subi	r24, 0xFD	; 253
     7ec:	80 83       	st	Z, r24
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
     7ee:	82 e6       	ldi	r24, 0x62	; 98
     7f0:	8a 95       	dec	r24
     7f2:	f1 f7       	brne	.-4      	; 0x7f0 <adc_read+0x12>
     7f4:	00 00       	nop
		_delay_us(60);
		int a=*p;
     7f6:	80 81       	ld	r24, Z
		//printf("%d",a,"/n");
		return *p;
     7f8:	08 95       	ret
		} else {
		return 0;
     7fa:	80 e0       	ldi	r24, 0x00	; 0
	}
     7fc:	08 95       	ret

000007fe <CAN_init>:
#include <stdio.h>
#include <avr/delay.h>

void CAN_init(){

  MCP2515_init();
     7fe:	0e 94 3a 07 	call	0xe74	; 0xe74 <MCP2515_init>

  //Enable LOOPBACK mode
	MCP2515_Bit_Modify(MCP_CANCTRL, 0b11100000, MODE_LOOPBACK);
     802:	40 e4       	ldi	r20, 0x40	; 64
     804:	60 ee       	ldi	r22, 0xE0	; 224
     806:	8f e0       	ldi	r24, 0x0F	; 15
     808:	0e 94 73 07 	call	0xee6	; 0xee6 <MCP2515_Bit_Modify>
	//MCP2515_write(MCP_CANCTRL, MODE_LOOPBACK);
	MCP2515_Bit_Modify(MCP_RXB0CTRL, 0b01100000, 0b01100000);
     80c:	40 e6       	ldi	r20, 0x60	; 96
     80e:	60 e6       	ldi	r22, 0x60	; 96
     810:	80 e6       	ldi	r24, 0x60	; 96
     812:	0e 94 73 07 	call	0xee6	; 0xee6 <MCP2515_Bit_Modify>
	
	//printf("MCP_CANCTRL %x", MCP2515_read(MCP_CANCTRL) & 0b11100000);

  uint8_t status = MCP2515_read(MCP_CANSTAT);
     816:	8e e0       	ldi	r24, 0x0E	; 14
     818:	0e 94 26 07 	call	0xe4c	; 0xe4c <MCP2515_read>
  printf("STATUS %d \n", status);
     81c:	1f 92       	push	r1
     81e:	8f 93       	push	r24
     820:	8a e1       	ldi	r24, 0x1A	; 26
     822:	91 e0       	ldi	r25, 0x01	; 1
     824:	9f 93       	push	r25
     826:	8f 93       	push	r24
     828:	0e 94 2b 09 	call	0x1256	; 0x1256 <printf>
  
  
  MCP2515_Bit_Modify(MCP_CANINTE, 0b01, 0b01);
     82c:	41 e0       	ldi	r20, 0x01	; 1
     82e:	61 e0       	ldi	r22, 0x01	; 1
     830:	8b e2       	ldi	r24, 0x2B	; 43
     832:	0e 94 73 07 	call	0xee6	; 0xee6 <MCP2515_Bit_Modify>
  //MCP2515_write(MCP_CANINTF, 0);
  //MCP2515_Bit_Modify(MCP_CANINTF, 0x01, 0);

}
     836:	0f 90       	pop	r0
     838:	0f 90       	pop	r0
     83a:	0f 90       	pop	r0
     83c:	0f 90       	pop	r0
     83e:	08 95       	ret

00000840 <CAN_message_send>:


void CAN_message_send(CAN_message* message){
     840:	cf 92       	push	r12
     842:	df 92       	push	r13
     844:	ef 92       	push	r14
     846:	ff 92       	push	r15
     848:	1f 93       	push	r17
     84a:	cf 93       	push	r28
     84c:	df 93       	push	r29
     84e:	6c 01       	movw	r12, r24

  //Set the message id
  MCP2515_write(MCP_TXB0SIDH, (message->id >> 3));
     850:	fc 01       	movw	r30, r24
     852:	60 81       	ld	r22, Z
     854:	71 81       	ldd	r23, Z+1	; 0x01
     856:	76 95       	lsr	r23
     858:	67 95       	ror	r22
     85a:	76 95       	lsr	r23
     85c:	67 95       	ror	r22
     85e:	76 95       	lsr	r23
     860:	67 95       	ror	r22
     862:	81 e3       	ldi	r24, 0x31	; 49
     864:	0e 94 4c 07 	call	0xe98	; 0xe98 <MCP2515_write>
  MCP2515_write(MCP_TXB0SIDL, (message->id << 5));
     868:	f6 01       	movw	r30, r12
     86a:	60 81       	ld	r22, Z
     86c:	62 95       	swap	r22
     86e:	66 0f       	add	r22, r22
     870:	60 7e       	andi	r22, 0xE0	; 224
     872:	82 e3       	ldi	r24, 0x32	; 50
     874:	0e 94 4c 07 	call	0xe98	; 0xe98 <MCP2515_write>

  //Set data length and use data frame (RTR = 0)
	MCP2515_write(MCP_TXB0DLC, (0x0F) & (message->length));
     878:	f6 01       	movw	r30, r12
     87a:	62 81       	ldd	r22, Z+2	; 0x02
     87c:	6f 70       	andi	r22, 0x0F	; 15
     87e:	85 e3       	ldi	r24, 0x35	; 53
     880:	0e 94 4c 07 	call	0xe98	; 0xe98 <MCP2515_write>

  //Set data bytes (max. 8 bytes)
	for (int i = 0; i < message->length; i++) {
     884:	f6 01       	movw	r30, r12
     886:	82 81       	ldd	r24, Z+2	; 0x02
     888:	18 16       	cp	r1, r24
     88a:	bc f4       	brge	.+46     	; 0x8ba <CAN_message_send+0x7a>
     88c:	76 01       	movw	r14, r12
     88e:	f3 e0       	ldi	r31, 0x03	; 3
     890:	ef 0e       	add	r14, r31
     892:	f1 1c       	adc	r15, r1
     894:	16 e3       	ldi	r17, 0x36	; 54
     896:	c0 e0       	ldi	r28, 0x00	; 0
     898:	d0 e0       	ldi	r29, 0x00	; 0
			MCP2515_write(MCP_TXB0D0 + i, message->data[i]);
     89a:	f7 01       	movw	r30, r14
     89c:	61 91       	ld	r22, Z+
     89e:	7f 01       	movw	r14, r30
     8a0:	81 2f       	mov	r24, r17
     8a2:	0e 94 4c 07 	call	0xe98	; 0xe98 <MCP2515_write>

  //Set data length and use data frame (RTR = 0)
	MCP2515_write(MCP_TXB0DLC, (0x0F) & (message->length));

  //Set data bytes (max. 8 bytes)
	for (int i = 0; i < message->length; i++) {
     8a6:	21 96       	adiw	r28, 0x01	; 1
     8a8:	1f 5f       	subi	r17, 0xFF	; 255
     8aa:	f6 01       	movw	r30, r12
     8ac:	82 81       	ldd	r24, Z+2	; 0x02
     8ae:	08 2e       	mov	r0, r24
     8b0:	00 0c       	add	r0, r0
     8b2:	99 0b       	sbc	r25, r25
     8b4:	c8 17       	cp	r28, r24
     8b6:	d9 07       	cpc	r29, r25
     8b8:	84 f3       	brlt	.-32     	; 0x89a <CAN_message_send+0x5a>
	printf("Sending data length %x \n\r", MCP2515_read(MCP_TXB0DLC));
	printf("Sending first data %x \n\r", MCP2515_read(MCP_TXB0D0));*/


	//Request to send via TX0
	MCP2515_RTS(0);
     8ba:	80 e0       	ldi	r24, 0x00	; 0
     8bc:	90 e0       	ldi	r25, 0x00	; 0
     8be:	0e 94 5e 07 	call	0xebc	; 0xebc <MCP2515_RTS>
}
     8c2:	df 91       	pop	r29
     8c4:	cf 91       	pop	r28
     8c6:	1f 91       	pop	r17
     8c8:	ff 90       	pop	r15
     8ca:	ef 90       	pop	r14
     8cc:	df 90       	pop	r13
     8ce:	cf 90       	pop	r12
     8d0:	08 95       	ret

000008d2 <CAN_data_receive>:


CAN_message CAN_data_receive(){
     8d2:	8f 92       	push	r8
     8d4:	9f 92       	push	r9
     8d6:	af 92       	push	r10
     8d8:	bf 92       	push	r11
     8da:	cf 92       	push	r12
     8dc:	df 92       	push	r13
     8de:	ef 92       	push	r14
     8e0:	ff 92       	push	r15
     8e2:	0f 93       	push	r16
     8e4:	1f 93       	push	r17
     8e6:	cf 93       	push	r28
     8e8:	df 93       	push	r29
     8ea:	cd b7       	in	r28, 0x3d	; 61
     8ec:	de b7       	in	r29, 0x3e	; 62
     8ee:	2b 97       	sbiw	r28, 0x0b	; 11
     8f0:	0f b6       	in	r0, 0x3f	; 63
     8f2:	f8 94       	cli
     8f4:	de bf       	out	0x3e, r29	; 62
     8f6:	0f be       	out	0x3f, r0	; 63
     8f8:	cd bf       	out	0x3d, r28	; 61
     8fa:	4c 01       	movw	r8, r24
 // printf("CANINTF: %d\n\r", MCP2515_read(MCP_CANINTF) & 0b1);
	
	if ((MCP2515_read(MCP_CANINTF) & 0b01) == 1){
     8fc:	8c e2       	ldi	r24, 0x2C	; 44
     8fe:	0e 94 26 07 	call	0xe4c	; 0xe4c <MCP2515_read>
     902:	80 ff       	sbrs	r24, 0
     904:	58 c0       	rjmp	.+176    	; 0x9b6 <CAN_data_receive+0xe4>
	
	  CAN_message message;
	  //Get message id
	  message.id  = (MCP2515_read(MCP_RXB0SIDH) << 3) | (MCP2515_read(MCP_RXB0SIDL) >> 5);
     906:	81 e6       	ldi	r24, 0x61	; 97
     908:	0e 94 26 07 	call	0xe4c	; 0xe4c <MCP2515_read>
     90c:	a8 2e       	mov	r10, r24
     90e:	82 e6       	ldi	r24, 0x62	; 98
     910:	0e 94 26 07 	call	0xe4c	; 0xe4c <MCP2515_read>
     914:	b1 2c       	mov	r11, r1
     916:	aa 0c       	add	r10, r10
     918:	bb 1c       	adc	r11, r11
     91a:	aa 0c       	add	r10, r10
     91c:	bb 1c       	adc	r11, r11
     91e:	aa 0c       	add	r10, r10
     920:	bb 1c       	adc	r11, r11
     922:	82 95       	swap	r24
     924:	86 95       	lsr	r24
     926:	87 70       	andi	r24, 0x07	; 7
     928:	a8 2a       	or	r10, r24

	  //Get message length
	  message.length = (0x0F) & (MCP2515_read(MCP_RXB0DLC));
     92a:	85 e6       	ldi	r24, 0x65	; 101
     92c:	0e 94 26 07 	call	0xe4c	; 0xe4c <MCP2515_read>
     930:	08 2f       	mov	r16, r24
     932:	0f 70       	andi	r16, 0x0F	; 15

	  //Get message data
	  for(int i = 0; i < message.length; i++) {
     934:	10 16       	cp	r1, r16
     936:	ac f4       	brge	.+42     	; 0x962 <CAN_data_receive+0x90>
     938:	7e 01       	movw	r14, r28
     93a:	24 e0       	ldi	r18, 0x04	; 4
     93c:	e2 0e       	add	r14, r18
     93e:	f1 1c       	adc	r15, r1
     940:	ce 01       	movw	r24, r28
     942:	80 0f       	add	r24, r16
     944:	91 1d       	adc	r25, r1
     946:	fc 01       	movw	r30, r24
     948:	34 96       	adiw	r30, 0x04	; 4
     94a:	6f 01       	movw	r12, r30
     94c:	16 e6       	ldi	r17, 0x66	; 102
  		message.data[i] = MCP2515_read(MCP_RXB0D0 + i);
     94e:	81 2f       	mov	r24, r17
     950:	0e 94 26 07 	call	0xe4c	; 0xe4c <MCP2515_read>
     954:	f7 01       	movw	r30, r14
     956:	81 93       	st	Z+, r24
     958:	7f 01       	movw	r14, r30
     95a:	1f 5f       	subi	r17, 0xFF	; 255

	  //Get message length
	  message.length = (0x0F) & (MCP2515_read(MCP_RXB0DLC));

	  //Get message data
	  for(int i = 0; i < message.length; i++) {
     95c:	ec 15       	cp	r30, r12
     95e:	fd 05       	cpc	r31, r13
     960:	b1 f7       	brne	.-20     	; 0x94e <CAN_data_receive+0x7c>
  		message.data[i] = MCP2515_read(MCP_RXB0D0 + i);
		 //printf("message sended %d", message.data[i] );
	  }
	  printf("message received: %d\n\r", message.data[0] );
     962:	8c 81       	ldd	r24, Y+4	; 0x04
     964:	1f 92       	push	r1
     966:	8f 93       	push	r24
     968:	86 e2       	ldi	r24, 0x26	; 38
     96a:	91 e0       	ldi	r25, 0x01	; 1
     96c:	9f 93       	push	r25
     96e:	8f 93       	push	r24
     970:	0e 94 2b 09 	call	0x1256	; 0x1256 <printf>
	  printf("data length received: %d\n\r", MCP2515_read(MCP_RXB0DLC) );
     974:	85 e6       	ldi	r24, 0x65	; 101
     976:	0e 94 26 07 	call	0xe4c	; 0xe4c <MCP2515_read>
     97a:	1f 92       	push	r1
     97c:	8f 93       	push	r24
     97e:	8d e3       	ldi	r24, 0x3D	; 61
     980:	91 e0       	ldi	r25, 0x01	; 1
     982:	9f 93       	push	r25
     984:	8f 93       	push	r24
     986:	0e 94 2b 09 	call	0x1256	; 0x1256 <printf>
		
	  MCP2515_Bit_Modify(MCP_CANINTF, 0x01, 0x00);
     98a:	40 e0       	ldi	r20, 0x00	; 0
     98c:	61 e0       	ldi	r22, 0x01	; 1
     98e:	8c e2       	ldi	r24, 0x2C	; 44
     990:	0e 94 73 07 	call	0xee6	; 0xee6 <MCP2515_Bit_Modify>
	  return message;
     994:	ba 82       	std	Y+2, r11	; 0x02
     996:	a9 82       	std	Y+1, r10	; 0x01
     998:	0b 83       	std	Y+3, r16	; 0x03
     99a:	8b e0       	ldi	r24, 0x0B	; 11
     99c:	fe 01       	movw	r30, r28
     99e:	31 96       	adiw	r30, 0x01	; 1
     9a0:	d4 01       	movw	r26, r8
     9a2:	01 90       	ld	r0, Z+
     9a4:	0d 92       	st	X+, r0
     9a6:	8a 95       	dec	r24
     9a8:	e1 f7       	brne	.-8      	; 0x9a2 <CAN_data_receive+0xd0>
     9aa:	0f b6       	in	r0, 0x3f	; 63
     9ac:	f8 94       	cli
     9ae:	de bf       	out	0x3e, r29	; 62
     9b0:	0f be       	out	0x3f, r0	; 63
     9b2:	cd bf       	out	0x3d, r28	; 61
     9b4:	08 c0       	rjmp	.+16     	; 0x9c6 <CAN_data_receive+0xf4>
	}
	else
		printf ("No valid message. CANINTF flag low! \n\r");
     9b6:	88 e5       	ldi	r24, 0x58	; 88
     9b8:	91 e0       	ldi	r25, 0x01	; 1
     9ba:	9f 93       	push	r25
     9bc:	8f 93       	push	r24
     9be:	0e 94 2b 09 	call	0x1256	; 0x1256 <printf>
}
     9c2:	0f 90       	pop	r0
     9c4:	0f 90       	pop	r0
     9c6:	c4 01       	movw	r24, r8
     9c8:	2b 96       	adiw	r28, 0x0b	; 11
     9ca:	0f b6       	in	r0, 0x3f	; 63
     9cc:	f8 94       	cli
     9ce:	de bf       	out	0x3e, r29	; 62
     9d0:	0f be       	out	0x3f, r0	; 63
     9d2:	cd bf       	out	0x3d, r28	; 61
     9d4:	df 91       	pop	r29
     9d6:	cf 91       	pop	r28
     9d8:	1f 91       	pop	r17
     9da:	0f 91       	pop	r16
     9dc:	ff 90       	pop	r15
     9de:	ef 90       	pop	r14
     9e0:	df 90       	pop	r13
     9e2:	cf 90       	pop	r12
     9e4:	bf 90       	pop	r11
     9e6:	af 90       	pop	r10
     9e8:	9f 90       	pop	r9
     9ea:	8f 90       	pop	r8
     9ec:	08 95       	ret

000009ee <OLED_init>:

}


void OLED_write_command(uint8_t cmnd){
  *OLED_cmnd = cmnd;
     9ee:	e0 91 08 01 	lds	r30, 0x0108	; 0x800108 <OLED_cmnd>
     9f2:	f0 91 09 01 	lds	r31, 0x0109	; 0x800109 <OLED_cmnd+0x1>
     9f6:	8e ea       	ldi	r24, 0xAE	; 174
     9f8:	80 83       	st	Z, r24
     9fa:	e0 91 08 01 	lds	r30, 0x0108	; 0x800108 <OLED_cmnd>
     9fe:	f0 91 09 01 	lds	r31, 0x0109	; 0x800109 <OLED_cmnd+0x1>
     a02:	81 ea       	ldi	r24, 0xA1	; 161
     a04:	80 83       	st	Z, r24
     a06:	e0 91 08 01 	lds	r30, 0x0108	; 0x800108 <OLED_cmnd>
     a0a:	f0 91 09 01 	lds	r31, 0x0109	; 0x800109 <OLED_cmnd+0x1>
     a0e:	8a ed       	ldi	r24, 0xDA	; 218
     a10:	80 83       	st	Z, r24
     a12:	e0 91 08 01 	lds	r30, 0x0108	; 0x800108 <OLED_cmnd>
     a16:	f0 91 09 01 	lds	r31, 0x0109	; 0x800109 <OLED_cmnd+0x1>
     a1a:	82 e1       	ldi	r24, 0x12	; 18
     a1c:	80 83       	st	Z, r24
     a1e:	e0 91 08 01 	lds	r30, 0x0108	; 0x800108 <OLED_cmnd>
     a22:	f0 91 09 01 	lds	r31, 0x0109	; 0x800109 <OLED_cmnd+0x1>
     a26:	88 ec       	ldi	r24, 0xC8	; 200
     a28:	80 83       	st	Z, r24
     a2a:	e0 91 08 01 	lds	r30, 0x0108	; 0x800108 <OLED_cmnd>
     a2e:	f0 91 09 01 	lds	r31, 0x0109	; 0x800109 <OLED_cmnd+0x1>
     a32:	88 ea       	ldi	r24, 0xA8	; 168
     a34:	80 83       	st	Z, r24
     a36:	e0 91 08 01 	lds	r30, 0x0108	; 0x800108 <OLED_cmnd>
     a3a:	f0 91 09 01 	lds	r31, 0x0109	; 0x800109 <OLED_cmnd+0x1>
     a3e:	8f e3       	ldi	r24, 0x3F	; 63
     a40:	80 83       	st	Z, r24
     a42:	e0 91 08 01 	lds	r30, 0x0108	; 0x800108 <OLED_cmnd>
     a46:	f0 91 09 01 	lds	r31, 0x0109	; 0x800109 <OLED_cmnd+0x1>
     a4a:	85 ed       	ldi	r24, 0xD5	; 213
     a4c:	80 83       	st	Z, r24
     a4e:	e0 91 08 01 	lds	r30, 0x0108	; 0x800108 <OLED_cmnd>
     a52:	f0 91 09 01 	lds	r31, 0x0109	; 0x800109 <OLED_cmnd+0x1>
     a56:	80 e8       	ldi	r24, 0x80	; 128
     a58:	80 83       	st	Z, r24
     a5a:	e0 91 08 01 	lds	r30, 0x0108	; 0x800108 <OLED_cmnd>
     a5e:	f0 91 09 01 	lds	r31, 0x0109	; 0x800109 <OLED_cmnd+0x1>
     a62:	81 e8       	ldi	r24, 0x81	; 129
     a64:	80 83       	st	Z, r24
     a66:	e0 91 08 01 	lds	r30, 0x0108	; 0x800108 <OLED_cmnd>
     a6a:	f0 91 09 01 	lds	r31, 0x0109	; 0x800109 <OLED_cmnd+0x1>
     a6e:	80 e5       	ldi	r24, 0x50	; 80
     a70:	80 83       	st	Z, r24
     a72:	e0 91 08 01 	lds	r30, 0x0108	; 0x800108 <OLED_cmnd>
     a76:	f0 91 09 01 	lds	r31, 0x0109	; 0x800109 <OLED_cmnd+0x1>
     a7a:	89 ed       	ldi	r24, 0xD9	; 217
     a7c:	80 83       	st	Z, r24
     a7e:	e0 91 08 01 	lds	r30, 0x0108	; 0x800108 <OLED_cmnd>
     a82:	f0 91 09 01 	lds	r31, 0x0109	; 0x800109 <OLED_cmnd+0x1>
     a86:	81 e2       	ldi	r24, 0x21	; 33
     a88:	80 83       	st	Z, r24
     a8a:	e0 91 08 01 	lds	r30, 0x0108	; 0x800108 <OLED_cmnd>
     a8e:	f0 91 09 01 	lds	r31, 0x0109	; 0x800109 <OLED_cmnd+0x1>
     a92:	80 e2       	ldi	r24, 0x20	; 32
     a94:	80 83       	st	Z, r24
     a96:	e0 91 08 01 	lds	r30, 0x0108	; 0x800108 <OLED_cmnd>
     a9a:	f0 91 09 01 	lds	r31, 0x0109	; 0x800109 <OLED_cmnd+0x1>
     a9e:	82 e0       	ldi	r24, 0x02	; 2
     aa0:	80 83       	st	Z, r24
     aa2:	e0 91 08 01 	lds	r30, 0x0108	; 0x800108 <OLED_cmnd>
     aa6:	f0 91 09 01 	lds	r31, 0x0109	; 0x800109 <OLED_cmnd+0x1>
     aaa:	8b ed       	ldi	r24, 0xDB	; 219
     aac:	80 83       	st	Z, r24
     aae:	e0 91 08 01 	lds	r30, 0x0108	; 0x800108 <OLED_cmnd>
     ab2:	f0 91 09 01 	lds	r31, 0x0109	; 0x800109 <OLED_cmnd+0x1>
     ab6:	80 e3       	ldi	r24, 0x30	; 48
     ab8:	80 83       	st	Z, r24
     aba:	e0 91 08 01 	lds	r30, 0x0108	; 0x800108 <OLED_cmnd>
     abe:	f0 91 09 01 	lds	r31, 0x0109	; 0x800109 <OLED_cmnd+0x1>
     ac2:	8d ea       	ldi	r24, 0xAD	; 173
     ac4:	80 83       	st	Z, r24
     ac6:	e0 91 08 01 	lds	r30, 0x0108	; 0x800108 <OLED_cmnd>
     aca:	f0 91 09 01 	lds	r31, 0x0109	; 0x800109 <OLED_cmnd+0x1>
     ace:	10 82       	st	Z, r1
     ad0:	e0 91 08 01 	lds	r30, 0x0108	; 0x800108 <OLED_cmnd>
     ad4:	f0 91 09 01 	lds	r31, 0x0109	; 0x800109 <OLED_cmnd+0x1>
     ad8:	84 ea       	ldi	r24, 0xA4	; 164
     ada:	80 83       	st	Z, r24
     adc:	e0 91 08 01 	lds	r30, 0x0108	; 0x800108 <OLED_cmnd>
     ae0:	f0 91 09 01 	lds	r31, 0x0109	; 0x800109 <OLED_cmnd+0x1>
     ae4:	86 ea       	ldi	r24, 0xA6	; 166
     ae6:	80 83       	st	Z, r24
     ae8:	e0 91 08 01 	lds	r30, 0x0108	; 0x800108 <OLED_cmnd>
     aec:	f0 91 09 01 	lds	r31, 0x0109	; 0x800109 <OLED_cmnd+0x1>
     af0:	8f ea       	ldi	r24, 0xAF	; 175
     af2:	80 83       	st	Z, r24
     af4:	08 95       	ret

00000af6 <OLED_goto_line>:
     af6:	80 93 22 02 	sts	0x0222, r24	; 0x800222 <__data_end>
     afa:	88 30       	cpi	r24, 0x08	; 8
     afc:	88 f4       	brcc	.+34     	; 0xb20 <OLED_goto_line+0x2a>
     afe:	e0 91 08 01 	lds	r30, 0x0108	; 0x800108 <OLED_cmnd>
     b02:	f0 91 09 01 	lds	r31, 0x0109	; 0x800109 <OLED_cmnd+0x1>
     b06:	10 82       	st	Z, r1
     b08:	e0 91 08 01 	lds	r30, 0x0108	; 0x800108 <OLED_cmnd>
     b0c:	f0 91 09 01 	lds	r31, 0x0109	; 0x800109 <OLED_cmnd+0x1>
     b10:	90 e1       	ldi	r25, 0x10	; 16
     b12:	90 83       	st	Z, r25
     b14:	80 6b       	ori	r24, 0xB0	; 176
     b16:	e0 91 08 01 	lds	r30, 0x0108	; 0x800108 <OLED_cmnd>
     b1a:	f0 91 09 01 	lds	r31, 0x0109	; 0x800109 <OLED_cmnd+0x1>
     b1e:	80 83       	st	Z, r24
     b20:	08 95       	ret

00000b22 <OLED_print_char>:
     b22:	8a 30       	cpi	r24, 0x0A	; 10
     b24:	31 f4       	brne	.+12     	; 0xb32 <OLED_print_char+0x10>
     b26:	80 91 22 02 	lds	r24, 0x0222	; 0x800222 <__data_end>
     b2a:	8f 5f       	subi	r24, 0xFF	; 255
     b2c:	0e 94 7b 05 	call	0xaf6	; 0xaf6 <OLED_goto_line>
     b30:	08 95       	ret
     b32:	90 e0       	ldi	r25, 0x00	; 0
     b34:	9c 01       	movw	r18, r24
     b36:	22 0f       	add	r18, r18
     b38:	33 1f       	adc	r19, r19
     b3a:	22 0f       	add	r18, r18
     b3c:	33 1f       	adc	r19, r19
     b3e:	82 0f       	add	r24, r18
     b40:	93 1f       	adc	r25, r19
     b42:	20 e0       	ldi	r18, 0x00	; 0
     b44:	30 e0       	ldi	r19, 0x00	; 0
     b46:	80 5a       	subi	r24, 0xA0	; 160
     b48:	91 09       	sbc	r25, r1
     b4a:	a0 91 06 01 	lds	r26, 0x0106	; 0x800106 <OLED_data>
     b4e:	b0 91 07 01 	lds	r27, 0x0107	; 0x800107 <OLED_data+0x1>
     b52:	fc 01       	movw	r30, r24
     b54:	e2 0f       	add	r30, r18
     b56:	f3 1f       	adc	r31, r19
     b58:	e4 53       	subi	r30, 0x34	; 52
     b5a:	fd 4f       	sbci	r31, 0xFD	; 253
     b5c:	e4 91       	lpm	r30, Z
     b5e:	ec 93       	st	X, r30
     b60:	2f 5f       	subi	r18, 0xFF	; 255
     b62:	3f 4f       	sbci	r19, 0xFF	; 255
     b64:	25 30       	cpi	r18, 0x05	; 5
     b66:	31 05       	cpc	r19, r1
     b68:	81 f7       	brne	.-32     	; 0xb4a <OLED_print_char+0x28>
     b6a:	08 95       	ret

00000b6c <OLED_print>:
     b6c:	cf 93       	push	r28
     b6e:	df 93       	push	r29
     b70:	ec 01       	movw	r28, r24
     b72:	88 81       	ld	r24, Y
     b74:	88 23       	and	r24, r24
     b76:	31 f0       	breq	.+12     	; 0xb84 <OLED_print+0x18>
     b78:	21 96       	adiw	r28, 0x01	; 1
     b7a:	0e 94 91 05 	call	0xb22	; 0xb22 <OLED_print_char>
     b7e:	89 91       	ld	r24, Y+
     b80:	81 11       	cpse	r24, r1
     b82:	fb cf       	rjmp	.-10     	; 0xb7a <OLED_print+0xe>
     b84:	df 91       	pop	r29
     b86:	cf 91       	pop	r28
     b88:	08 95       	ret

00000b8a <OLED_print_char2>:
     b8a:	8a 30       	cpi	r24, 0x0A	; 10
     b8c:	31 f4       	brne	.+12     	; 0xb9a <OLED_print_char2+0x10>
     b8e:	80 91 22 02 	lds	r24, 0x0222	; 0x800222 <__data_end>
     b92:	8f 5f       	subi	r24, 0xFF	; 255
     b94:	0e 94 7b 05 	call	0xaf6	; 0xaf6 <OLED_goto_line>
     b98:	08 95       	ret
     b9a:	62 30       	cpi	r22, 0x02	; 2
     b9c:	71 05       	cpc	r23, r1
     b9e:	09 f1       	breq	.+66     	; 0xbe2 <OLED_print_char2+0x58>
     ba0:	63 30       	cpi	r22, 0x03	; 3
     ba2:	71 05       	cpc	r23, r1
     ba4:	09 f4       	brne	.+2      	; 0xba8 <OLED_print_char2+0x1e>
     ba6:	3a c0       	rjmp	.+116    	; 0xc1c <OLED_print_char2+0x92>
     ba8:	61 30       	cpi	r22, 0x01	; 1
     baa:	71 05       	cpc	r23, r1
     bac:	09 f0       	breq	.+2      	; 0xbb0 <OLED_print_char2+0x26>
     bae:	53 c0       	rjmp	.+166    	; 0xc56 <OLED_print_char2+0xcc>
     bb0:	90 e0       	ldi	r25, 0x00	; 0
     bb2:	fc 01       	movw	r30, r24
     bb4:	ee 0f       	add	r30, r30
     bb6:	ff 1f       	adc	r31, r31
     bb8:	ee 0f       	add	r30, r30
     bba:	ff 1f       	adc	r31, r31
     bbc:	e0 53       	subi	r30, 0x30	; 48
     bbe:	ff 4f       	sbci	r31, 0xFF	; 255
     bc0:	88 0f       	add	r24, r24
     bc2:	99 1f       	adc	r25, r25
     bc4:	88 0f       	add	r24, r24
     bc6:	99 1f       	adc	r25, r25
     bc8:	8c 52       	subi	r24, 0x2C	; 44
     bca:	9f 4f       	sbci	r25, 0xFF	; 255
     bcc:	a0 91 06 01 	lds	r26, 0x0106	; 0x800106 <OLED_data>
     bd0:	b0 91 07 01 	lds	r27, 0x0107	; 0x800107 <OLED_data+0x1>
     bd4:	24 91       	lpm	r18, Z
     bd6:	2c 93       	st	X, r18
     bd8:	31 96       	adiw	r30, 0x01	; 1
     bda:	e8 17       	cp	r30, r24
     bdc:	f9 07       	cpc	r31, r25
     bde:	b1 f7       	brne	.-20     	; 0xbcc <OLED_print_char2+0x42>
     be0:	08 95       	ret
     be2:	90 e0       	ldi	r25, 0x00	; 0
     be4:	9c 01       	movw	r18, r24
     be6:	22 0f       	add	r18, r18
     be8:	33 1f       	adc	r19, r19
     bea:	22 0f       	add	r18, r18
     bec:	33 1f       	adc	r19, r19
     bee:	82 0f       	add	r24, r18
     bf0:	93 1f       	adc	r25, r19
     bf2:	20 e0       	ldi	r18, 0x00	; 0
     bf4:	30 e0       	ldi	r19, 0x00	; 0
     bf6:	80 5a       	subi	r24, 0xA0	; 160
     bf8:	91 09       	sbc	r25, r1
     bfa:	a0 91 06 01 	lds	r26, 0x0106	; 0x800106 <OLED_data>
     bfe:	b0 91 07 01 	lds	r27, 0x0107	; 0x800107 <OLED_data+0x1>
     c02:	fc 01       	movw	r30, r24
     c04:	e2 0f       	add	r30, r18
     c06:	f3 1f       	adc	r31, r19
     c08:	e4 53       	subi	r30, 0x34	; 52
     c0a:	fd 4f       	sbci	r31, 0xFD	; 253
     c0c:	e4 91       	lpm	r30, Z
     c0e:	ec 93       	st	X, r30
     c10:	2f 5f       	subi	r18, 0xFF	; 255
     c12:	3f 4f       	sbci	r19, 0xFF	; 255
     c14:	25 30       	cpi	r18, 0x05	; 5
     c16:	31 05       	cpc	r19, r1
     c18:	81 f7       	brne	.-32     	; 0xbfa <OLED_print_char2+0x70>
     c1a:	08 95       	ret
     c1c:	90 e0       	ldi	r25, 0x00	; 0
     c1e:	fc 01       	movw	r30, r24
     c20:	ee 0f       	add	r30, r30
     c22:	ff 1f       	adc	r31, r31
     c24:	ee 0f       	add	r30, r30
     c26:	ff 1f       	adc	r31, r31
     c28:	ee 0f       	add	r30, r30
     c2a:	ff 1f       	adc	r31, r31
     c2c:	e9 55       	subi	r30, 0x59	; 89
     c2e:	fc 4f       	sbci	r31, 0xFC	; 252
     c30:	88 0f       	add	r24, r24
     c32:	99 1f       	adc	r25, r25
     c34:	88 0f       	add	r24, r24
     c36:	99 1f       	adc	r25, r25
     c38:	88 0f       	add	r24, r24
     c3a:	99 1f       	adc	r25, r25
     c3c:	81 55       	subi	r24, 0x51	; 81
     c3e:	9c 4f       	sbci	r25, 0xFC	; 252
     c40:	a0 91 06 01 	lds	r26, 0x0106	; 0x800106 <OLED_data>
     c44:	b0 91 07 01 	lds	r27, 0x0107	; 0x800107 <OLED_data+0x1>
     c48:	24 91       	lpm	r18, Z
     c4a:	2c 93       	st	X, r18
     c4c:	31 96       	adiw	r30, 0x01	; 1
     c4e:	e8 17       	cp	r30, r24
     c50:	f9 07       	cpc	r31, r25
     c52:	b1 f7       	brne	.-20     	; 0xc40 <OLED_print_char2+0xb6>
     c54:	08 95       	ret
     c56:	90 e0       	ldi	r25, 0x00	; 0
     c58:	9c 01       	movw	r18, r24
     c5a:	22 0f       	add	r18, r18
     c5c:	33 1f       	adc	r19, r19
     c5e:	22 0f       	add	r18, r18
     c60:	33 1f       	adc	r19, r19
     c62:	82 0f       	add	r24, r18
     c64:	93 1f       	adc	r25, r19
     c66:	20 e0       	ldi	r18, 0x00	; 0
     c68:	30 e0       	ldi	r19, 0x00	; 0
     c6a:	80 5a       	subi	r24, 0xA0	; 160
     c6c:	91 09       	sbc	r25, r1
     c6e:	a0 91 06 01 	lds	r26, 0x0106	; 0x800106 <OLED_data>
     c72:	b0 91 07 01 	lds	r27, 0x0107	; 0x800107 <OLED_data+0x1>
     c76:	fc 01       	movw	r30, r24
     c78:	e2 0f       	add	r30, r18
     c7a:	f3 1f       	adc	r31, r19
     c7c:	e4 53       	subi	r30, 0x34	; 52
     c7e:	fd 4f       	sbci	r31, 0xFD	; 253
     c80:	e4 91       	lpm	r30, Z
     c82:	ec 93       	st	X, r30
     c84:	2f 5f       	subi	r18, 0xFF	; 255
     c86:	3f 4f       	sbci	r19, 0xFF	; 255
     c88:	25 30       	cpi	r18, 0x05	; 5
     c8a:	31 05       	cpc	r19, r1
     c8c:	81 f7       	brne	.-32     	; 0xc6e <OLED_print_char2+0xe4>
     c8e:	08 95       	ret

00000c90 <OLED_printf>:
     c90:	0f 93       	push	r16
     c92:	1f 93       	push	r17
     c94:	cf 93       	push	r28
     c96:	df 93       	push	r29
     c98:	ec 01       	movw	r28, r24
     c9a:	88 81       	ld	r24, Y
     c9c:	88 23       	and	r24, r24
     c9e:	41 f0       	breq	.+16     	; 0xcb0 <OLED_printf+0x20>
     ca0:	8b 01       	movw	r16, r22
     ca2:	21 96       	adiw	r28, 0x01	; 1
     ca4:	b8 01       	movw	r22, r16
     ca6:	0e 94 c5 05 	call	0xb8a	; 0xb8a <OLED_print_char2>
     caa:	89 91       	ld	r24, Y+
     cac:	81 11       	cpse	r24, r1
     cae:	fa cf       	rjmp	.-12     	; 0xca4 <OLED_printf+0x14>
     cb0:	df 91       	pop	r29
     cb2:	cf 91       	pop	r28
     cb4:	1f 91       	pop	r17
     cb6:	0f 91       	pop	r16
     cb8:	08 95       	ret

00000cba <OLED_clear_line>:
     cba:	0e 94 7b 05 	call	0xaf6	; 0xaf6 <OLED_goto_line>
     cbe:	80 e8       	ldi	r24, 0x80	; 128
     cc0:	90 e0       	ldi	r25, 0x00	; 0
     cc2:	e0 91 06 01 	lds	r30, 0x0106	; 0x800106 <OLED_data>
     cc6:	f0 91 07 01 	lds	r31, 0x0107	; 0x800107 <OLED_data+0x1>
     cca:	10 82       	st	Z, r1
     ccc:	01 97       	sbiw	r24, 0x01	; 1
     cce:	c9 f7       	brne	.-14     	; 0xcc2 <OLED_clear_line+0x8>
     cd0:	08 95       	ret

00000cd2 <OLED_goto_column>:
     cd2:	88 23       	and	r24, r24
     cd4:	7c f0       	brlt	.+30     	; 0xcf4 <OLED_goto_column+0x22>
     cd6:	98 2f       	mov	r25, r24
     cd8:	92 95       	swap	r25
     cda:	9f 70       	andi	r25, 0x0F	; 15
     cdc:	e0 91 08 01 	lds	r30, 0x0108	; 0x800108 <OLED_cmnd>
     ce0:	f0 91 09 01 	lds	r31, 0x0109	; 0x800109 <OLED_cmnd+0x1>
     ce4:	90 83       	st	Z, r25
     ce6:	8f 70       	andi	r24, 0x0F	; 15
     ce8:	80 61       	ori	r24, 0x10	; 16
     cea:	e0 91 08 01 	lds	r30, 0x0108	; 0x800108 <OLED_cmnd>
     cee:	f0 91 09 01 	lds	r31, 0x0109	; 0x800109 <OLED_cmnd+0x1>
     cf2:	80 83       	st	Z, r24
     cf4:	08 95       	ret

00000cf6 <OLED_home>:
     cf6:	10 92 22 02 	sts	0x0222, r1	; 0x800222 <__data_end>
     cfa:	80 e0       	ldi	r24, 0x00	; 0
     cfc:	0e 94 7b 05 	call	0xaf6	; 0xaf6 <OLED_goto_line>
     d00:	80 e0       	ldi	r24, 0x00	; 0
     d02:	0e 94 69 06 	call	0xcd2	; 0xcd2 <OLED_goto_column>
     d06:	08 95       	ret

00000d08 <OLED_reset>:
     d08:	cf 93       	push	r28
     d0a:	c0 e0       	ldi	r28, 0x00	; 0
     d0c:	8c 2f       	mov	r24, r28
     d0e:	0e 94 5d 06 	call	0xcba	; 0xcba <OLED_clear_line>
     d12:	cf 5f       	subi	r28, 0xFF	; 255
     d14:	c8 30       	cpi	r28, 0x08	; 8
     d16:	d1 f7       	brne	.-12     	; 0xd0c <OLED_reset+0x4>
     d18:	0e 94 7b 06 	call	0xcf6	; 0xcf6 <OLED_home>
     d1c:	cf 91       	pop	r28
     d1e:	08 95       	ret

00000d20 <OLED_draw_circle>:
  OLED_write_command(0x81);
  OLED_write_command(level);
}


int OLED_draw_circle(uint8_t x, uint8_t y, uint8_t r) {
     d20:	df 92       	push	r13
     d22:	ef 92       	push	r14
     d24:	ff 92       	push	r15
     d26:	0f 93       	push	r16
     d28:	1f 93       	push	r17
     d2a:	cf 93       	push	r28
     d2c:	df 93       	push	r29
	int circle;
	
	if (r < 8) {
     d2e:	48 30       	cpi	r20, 0x08	; 8
     d30:	08 f0       	brcs	.+2      	; 0xd34 <OLED_draw_circle+0x14>
     d32:	56 c0       	rjmp	.+172    	; 0xde0 <OLED_draw_circle+0xc0>
     d34:	04 2f       	mov	r16, r20
     d36:	f6 2e       	mov	r15, r22
     d38:	e8 2e       	mov	r14, r24
		circle = r - 1;
     d3a:	c4 2f       	mov	r28, r20
     d3c:	d0 e0       	ldi	r29, 0x00	; 0
     d3e:	21 97       	sbiw	r28, 0x01	; 1
		} else {
		return -1;
	}
	
	//Set position
	OLED_goto_line(x);
     d40:	0e 94 7b 05 	call	0xaf6	; 0xaf6 <OLED_goto_line>
	//OLED_goto_column(y);
	if (y < 128) {
     d44:	df 2c       	mov	r13, r15
     d46:	ff 20       	and	r15, r15
     d48:	0c f4       	brge	.+2      	; 0xd4c <OLED_draw_circle+0x2c>
     d4a:	4d c0       	rjmp	.+154    	; 0xde6 <OLED_draw_circle+0xc6>
		*OLED_cmnd = 0x00 + (y >> 4);
     d4c:	e0 91 08 01 	lds	r30, 0x0108	; 0x800108 <OLED_cmnd>
     d50:	f0 91 09 01 	lds	r31, 0x0109	; 0x800109 <OLED_cmnd+0x1>
     d54:	9f 2d       	mov	r25, r15
     d56:	92 95       	swap	r25
     d58:	9f 70       	andi	r25, 0x0F	; 15
     d5a:	90 83       	st	Z, r25
		*OLED_cmnd = 0x10 + (y >> 4);
     d5c:	e0 91 08 01 	lds	r30, 0x0108	; 0x800108 <OLED_cmnd>
     d60:	f0 91 09 01 	lds	r31, 0x0109	; 0x800109 <OLED_cmnd+0x1>
     d64:	90 5f       	subi	r25, 0xF0	; 240
     d66:	90 83       	st	Z, r25
     d68:	3e c0       	rjmp	.+124    	; 0xde6 <OLED_draw_circle+0xc6>
	}

	//Draw circle (first part)
	for(int i = 0; i < 16; i++) {
		*OLED_data = pgm_read_byte(&circles[circle][i]);
     d6a:	a0 91 06 01 	lds	r26, 0x0106	; 0x800106 <OLED_data>
     d6e:	b0 91 07 01 	lds	r27, 0x0107	; 0x800107 <OLED_data+0x1>
     d72:	94 91       	lpm	r25, Z
     d74:	9c 93       	st	X, r25
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
     d76:	8f ef       	ldi	r24, 0xFF	; 255
     d78:	9f e5       	ldi	r25, 0x5F	; 95
     d7a:	01 97       	sbiw	r24, 0x01	; 1
     d7c:	f1 f7       	brne	.-4      	; 0xd7a <OLED_draw_circle+0x5a>
     d7e:	00 c0       	rjmp	.+0      	; 0xd80 <OLED_draw_circle+0x60>
     d80:	00 00       	nop
     d82:	31 96       	adiw	r30, 0x01	; 1
		*OLED_cmnd = 0x00 + (y >> 4);
		*OLED_cmnd = 0x10 + (y >> 4);
	}

	//Draw circle (first part)
	for(int i = 0; i < 16; i++) {
     d84:	e2 17       	cp	r30, r18
     d86:	f3 07       	cpc	r31, r19
     d88:	81 f7       	brne	.-32     	; 0xd6a <OLED_draw_circle+0x4a>
		*OLED_data = pgm_read_byte(&circles[circle][i]);
		_delay_ms(20);
	}
	
	//Set position
		OLED_goto_line(x+1);
     d8a:	81 e0       	ldi	r24, 0x01	; 1
     d8c:	8e 0d       	add	r24, r14
     d8e:	0e 94 7b 05 	call	0xaf6	; 0xaf6 <OLED_goto_line>
		OLED_goto_column(y);
     d92:	8f 2d       	mov	r24, r15
     d94:	0e 94 69 06 	call	0xcd2	; 0xcd2 <OLED_goto_column>
		if (y < 128) {
     d98:	dd 20       	and	r13, r13
     d9a:	c4 f1       	brlt	.+112    	; 0xe0c <OLED_draw_circle+0xec>
			*OLED_cmnd = 0x00 + (y >> 4);
     d9c:	e0 91 08 01 	lds	r30, 0x0108	; 0x800108 <OLED_cmnd>
     da0:	f0 91 09 01 	lds	r31, 0x0109	; 0x800109 <OLED_cmnd+0x1>
     da4:	6f 2d       	mov	r22, r15
     da6:	62 95       	swap	r22
     da8:	6f 70       	andi	r22, 0x0F	; 15
     daa:	60 83       	st	Z, r22
			*OLED_cmnd = 0x10 + (y >> 4);
     dac:	e0 91 08 01 	lds	r30, 0x0108	; 0x800108 <OLED_cmnd>
     db0:	f0 91 09 01 	lds	r31, 0x0109	; 0x800109 <OLED_cmnd+0x1>
     db4:	60 5f       	subi	r22, 0xF0	; 240
     db6:	60 83       	st	Z, r22
     db8:	29 c0       	rjmp	.+82     	; 0xe0c <OLED_draw_circle+0xec>
		}
		
		//Draw circle (second part)
		for(int i = 16; i < 32; i++) {
			*OLED_data = pgm_read_byte(&circles[circle][i]);
     dba:	a0 91 06 01 	lds	r26, 0x0106	; 0x800106 <OLED_data>
     dbe:	b0 91 07 01 	lds	r27, 0x0107	; 0x800107 <OLED_data+0x1>
     dc2:	84 91       	lpm	r24, Z
     dc4:	8c 93       	st	X, r24
     dc6:	8f ef       	ldi	r24, 0xFF	; 255
     dc8:	9f e5       	ldi	r25, 0x5F	; 95
     dca:	01 97       	sbiw	r24, 0x01	; 1
     dcc:	f1 f7       	brne	.-4      	; 0xdca <OLED_draw_circle+0xaa>
     dce:	00 c0       	rjmp	.+0      	; 0xdd0 <OLED_draw_circle+0xb0>
     dd0:	00 00       	nop
     dd2:	31 96       	adiw	r30, 0x01	; 1
			*OLED_cmnd = 0x00 + (y >> 4);
			*OLED_cmnd = 0x10 + (y >> 4);
		}
		
		//Draw circle (second part)
		for(int i = 16; i < 32; i++) {
     dd4:	e2 17       	cp	r30, r18
     dd6:	f3 07       	cpc	r31, r19
     dd8:	81 f7       	brne	.-32     	; 0xdba <OLED_draw_circle+0x9a>
			*OLED_data = pgm_read_byte(&circles[circle][i]);
			_delay_ms(20);
	
		}

	return 0;
     dda:	80 e0       	ldi	r24, 0x00	; 0
     ddc:	90 e0       	ldi	r25, 0x00	; 0
     dde:	1d c0       	rjmp	.+58     	; 0xe1a <OLED_draw_circle+0xfa>
	int circle;
	
	if (r < 8) {
		circle = r - 1;
		} else {
		return -1;
     de0:	8f ef       	ldi	r24, 0xFF	; 255
     de2:	9f ef       	ldi	r25, 0xFF	; 255
     de4:	1a c0       	rjmp	.+52     	; 0xe1a <OLED_draw_circle+0xfa>
     de6:	cc 0f       	add	r28, r28
     de8:	dd 1f       	adc	r29, r29
     dea:	c2 95       	swap	r28
     dec:	d2 95       	swap	r29
     dee:	d0 7f       	andi	r29, 0xF0	; 240
     df0:	dc 27       	eor	r29, r28
     df2:	c0 7f       	andi	r28, 0xF0	; 240
     df4:	dc 27       	eor	r29, r28
     df6:	fe 01       	movw	r30, r28
     df8:	e0 59       	subi	r30, 0x90	; 144
     dfa:	ff 4f       	sbci	r31, 0xFF	; 255
     dfc:	90 e2       	ldi	r25, 0x20	; 32
     dfe:	09 9f       	mul	r16, r25
     e00:	80 01       	movw	r16, r0
     e02:	11 24       	eor	r1, r1
     e04:	98 01       	movw	r18, r16
     e06:	20 5a       	subi	r18, 0xA0	; 160
     e08:	3f 4f       	sbci	r19, 0xFF	; 255
     e0a:	af cf       	rjmp	.-162    	; 0xd6a <OLED_draw_circle+0x4a>
     e0c:	fe 01       	movw	r30, r28
     e0e:	e0 58       	subi	r30, 0x80	; 128
     e10:	ff 4f       	sbci	r31, 0xFF	; 255
     e12:	98 01       	movw	r18, r16
     e14:	20 59       	subi	r18, 0x90	; 144
     e16:	3f 4f       	sbci	r19, 0xFF	; 255
     e18:	d0 cf       	rjmp	.-96     	; 0xdba <OLED_draw_circle+0x9a>
			_delay_ms(20);
	
		}

	return 0;
     e1a:	df 91       	pop	r29
     e1c:	cf 91       	pop	r28
     e1e:	1f 91       	pop	r17
     e20:	0f 91       	pop	r16
     e22:	ff 90       	pop	r15
     e24:	ef 90       	pop	r14
     e26:	df 90       	pop	r13
     e28:	08 95       	ret

00000e2a <joystick_init>:

void joystick_init(void)
{   //INTERRUPT INIT
	// set the pin E0 as an imput interrupt for the putton of the analog 
	//DDRE = (1<< DDE0);  //setting PE0 as aninput with internal pull up
	PORTE = (1<PE0);
     e2a:	17 b8       	out	0x07, r1	; 7
	EMCUCR = (0<< ISC2);  //get the interupt signal when the button is pressed (not released)
     e2c:	16 be       	out	0x36, r1	; 54
	SREG = (1 << 7);      //global enable interrupt
     e2e:	80 e8       	ldi	r24, 0x80	; 128
     e30:	8f bf       	out	0x3f, r24	; 63
	GICR = (1 << INT2);   // enable interrupt INT2 in pin e0 
     e32:	80 e2       	ldi	r24, 0x20	; 32
     e34:	8b bf       	out	0x3b, r24	; 59
	
	mid_x= adc_read(2);
     e36:	82 e0       	ldi	r24, 0x02	; 2
     e38:	0e 94 ef 03 	call	0x7de	; 0x7de <adc_read>
     e3c:	80 93 24 02 	sts	0x0224, r24	; 0x800224 <mid_x>
	mid_y= adc_read(1);
     e40:	81 e0       	ldi	r24, 0x01	; 1
     e42:	0e 94 ef 03 	call	0x7de	; 0x7de <adc_read>
     e46:	80 93 23 02 	sts	0x0223, r24	; 0x800223 <mid_y>
     e4a:	08 95       	ret

00000e4c <MCP2515_read>:
  PORTB |= (1 << SPI_SS
  ); // Deselect CAN-controller return result;

  return result;

}
     e4c:	cf 93       	push	r28
     e4e:	c8 2f       	mov	r28, r24
     e50:	c4 98       	cbi	0x18, 4	; 24
     e52:	83 e0       	ldi	r24, 0x03	; 3
     e54:	0e 94 d5 08 	call	0x11aa	; 0x11aa <SPI_send>
     e58:	8c 2f       	mov	r24, r28
     e5a:	0e 94 d5 08 	call	0x11aa	; 0x11aa <SPI_send>
     e5e:	0e 94 d9 08 	call	0x11b2	; 0x11b2 <SPI_read>
     e62:	c4 9a       	sbi	0x18, 4	; 24
     e64:	cf 91       	pop	r28
     e66:	08 95       	ret

00000e68 <MCP2515_reset>:
     e68:	c4 98       	cbi	0x18, 4	; 24
     e6a:	80 ec       	ldi	r24, 0xC0	; 192
     e6c:	0e 94 d5 08 	call	0x11aa	; 0x11aa <SPI_send>
     e70:	c4 9a       	sbi	0x18, 4	; 24
     e72:	08 95       	ret

00000e74 <MCP2515_init>:
     e74:	0e 94 ce 08 	call	0x119c	; 0x119c <SPI_Init>
     e78:	0e 94 34 07 	call	0xe68	; 0xe68 <MCP2515_reset>
     e7c:	8e e0       	ldi	r24, 0x0E	; 14
     e7e:	0e 94 26 07 	call	0xe4c	; 0xe4c <MCP2515_read>
     e82:	80 7e       	andi	r24, 0xE0	; 224
     e84:	80 38       	cpi	r24, 0x80	; 128
     e86:	31 f0       	breq	.+12     	; 0xe94 <MCP2515_init+0x20>
     e88:	8f e7       	ldi	r24, 0x7F	; 127
     e8a:	91 e0       	ldi	r25, 0x01	; 1
     e8c:	0e 94 41 09 	call	0x1282	; 0x1282 <puts>
     e90:	81 e0       	ldi	r24, 0x01	; 1
     e92:	08 95       	ret
     e94:	80 e0       	ldi	r24, 0x00	; 0
     e96:	08 95       	ret

00000e98 <MCP2515_write>:
     e98:	cf 93       	push	r28
     e9a:	df 93       	push	r29
     e9c:	d8 2f       	mov	r29, r24
     e9e:	c6 2f       	mov	r28, r22
     ea0:	c4 98       	cbi	0x18, 4	; 24
     ea2:	82 e0       	ldi	r24, 0x02	; 2
     ea4:	0e 94 d5 08 	call	0x11aa	; 0x11aa <SPI_send>
     ea8:	8d 2f       	mov	r24, r29
     eaa:	0e 94 d5 08 	call	0x11aa	; 0x11aa <SPI_send>
     eae:	8c 2f       	mov	r24, r28
     eb0:	0e 94 d5 08 	call	0x11aa	; 0x11aa <SPI_send>
     eb4:	c4 9a       	sbi	0x18, 4	; 24
     eb6:	df 91       	pop	r29
     eb8:	cf 91       	pop	r28
     eba:	08 95       	ret

00000ebc <MCP2515_RTS>:
     ebc:	c4 98       	cbi	0x18, 4	; 24
     ebe:	00 97       	sbiw	r24, 0x00	; 0
     ec0:	21 f4       	brne	.+8      	; 0xeca <MCP2515_RTS+0xe>
     ec2:	81 e8       	ldi	r24, 0x81	; 129
     ec4:	0e 94 d5 08 	call	0x11aa	; 0x11aa <SPI_send>
     ec8:	0c c0       	rjmp	.+24     	; 0xee2 <MCP2515_RTS+0x26>
     eca:	81 30       	cpi	r24, 0x01	; 1
     ecc:	91 05       	cpc	r25, r1
     ece:	21 f4       	brne	.+8      	; 0xed8 <MCP2515_RTS+0x1c>
     ed0:	82 e8       	ldi	r24, 0x82	; 130
     ed2:	0e 94 d5 08 	call	0x11aa	; 0x11aa <SPI_send>
     ed6:	05 c0       	rjmp	.+10     	; 0xee2 <MCP2515_RTS+0x26>
     ed8:	02 97       	sbiw	r24, 0x02	; 2
     eda:	19 f4       	brne	.+6      	; 0xee2 <MCP2515_RTS+0x26>
     edc:	84 e8       	ldi	r24, 0x84	; 132
     ede:	0e 94 d5 08 	call	0x11aa	; 0x11aa <SPI_send>
     ee2:	c4 9a       	sbi	0x18, 4	; 24
     ee4:	08 95       	ret

00000ee6 <MCP2515_Bit_Modify>:

/*
The mask byte determines which bits in the register will be allowed to change.
if mask = 1 --> allow change, mask = 0 -> no change
*/
void MCP2515_Bit_Modify(uint8_t address, uint8_t mask, uint8_t data){
     ee6:	1f 93       	push	r17
     ee8:	cf 93       	push	r28
     eea:	df 93       	push	r29
     eec:	18 2f       	mov	r17, r24
     eee:	d6 2f       	mov	r29, r22
     ef0:	c4 2f       	mov	r28, r20

  PORTB &= ~(1 << SPI_SS); // Select CAN-controller
     ef2:	c4 98       	cbi	0x18, 4	; 24

  SPI_send(MCP_BITMOD);  //Send the command to modify bit
     ef4:	85 e0       	ldi	r24, 0x05	; 5
     ef6:	0e 94 d5 08 	call	0x11aa	; 0x11aa <SPI_send>
  SPI_send(address);     //Send the address
     efa:	81 2f       	mov	r24, r17
     efc:	0e 94 d5 08 	call	0x11aa	; 0x11aa <SPI_send>
  SPI_send(mask);        //Send the mask
     f00:	8d 2f       	mov	r24, r29
     f02:	0e 94 d5 08 	call	0x11aa	; 0x11aa <SPI_send>
  SPI_send(data);        //Send the data
     f06:	8c 2f       	mov	r24, r28
     f08:	0e 94 d5 08 	call	0x11aa	; 0x11aa <SPI_send>

  PORTB |= (1 << SPI_SS); // Deselect CAN-controller return result;
     f0c:	c4 9a       	sbi	0x18, 4	; 24

}
     f0e:	df 91       	pop	r29
     f10:	cf 91       	pop	r28
     f12:	1f 91       	pop	r17
     f14:	08 95       	ret

00000f16 <print_cursor>:
		print_cursor();
		
	}else if (dir == 'U' && cursorLine >= 0 ){
		clear_cursor();
		cursorLine -= 1;
		print_cursor();
     f16:	42 e0       	ldi	r20, 0x02	; 2
     f18:	63 e0       	ldi	r22, 0x03	; 3
     f1a:	80 91 25 02 	lds	r24, 0x0225	; 0x800225 <cursorLine>
     f1e:	0e 94 90 06 	call	0xd20	; 0xd20 <OLED_draw_circle>
     f22:	08 95       	ret

00000f24 <MENU_init>:
     f24:	0f 93       	push	r16
     f26:	1f 93       	push	r17
     f28:	cf 93       	push	r28
     f2a:	df 93       	push	r29
     f2c:	0e 94 84 06 	call	0xd08	; 0xd08 <OLED_reset>
     f30:	10 92 27 02 	sts	0x0227, r1	; 0x800227 <menu+0x1>
     f34:	10 92 26 02 	sts	0x0226, r1	; 0x800226 <menu>
     f38:	80 91 0a 01 	lds	r24, 0x010A	; 0x80010a <length>
     f3c:	90 91 0b 01 	lds	r25, 0x010B	; 0x80010b <length+0x1>
     f40:	18 16       	cp	r1, r24
     f42:	19 06       	cpc	r1, r25
     f44:	dc f4       	brge	.+54     	; 0xf7c <MENU_init+0x58>
     f46:	02 e1       	ldi	r16, 0x12	; 18
     f48:	11 e0       	ldi	r17, 0x01	; 1
     f4a:	c0 e0       	ldi	r28, 0x00	; 0
     f4c:	d0 e0       	ldi	r29, 0x00	; 0
     f4e:	81 e0       	ldi	r24, 0x01	; 1
     f50:	0e 94 69 06 	call	0xcd2	; 0xcd2 <OLED_goto_column>
     f54:	63 e0       	ldi	r22, 0x03	; 3
     f56:	70 e0       	ldi	r23, 0x00	; 0
     f58:	f8 01       	movw	r30, r16
     f5a:	81 91       	ld	r24, Z+
     f5c:	91 91       	ld	r25, Z+
     f5e:	8f 01       	movw	r16, r30
     f60:	0e 94 48 06 	call	0xc90	; 0xc90 <OLED_printf>
     f64:	86 ed       	ldi	r24, 0xD6	; 214
     f66:	91 e0       	ldi	r25, 0x01	; 1
     f68:	0e 94 b6 05 	call	0xb6c	; 0xb6c <OLED_print>
     f6c:	21 96       	adiw	r28, 0x01	; 1
     f6e:	80 91 0a 01 	lds	r24, 0x010A	; 0x80010a <length>
     f72:	90 91 0b 01 	lds	r25, 0x010B	; 0x80010b <length+0x1>
     f76:	c8 17       	cp	r28, r24
     f78:	d9 07       	cpc	r29, r25
     f7a:	4c f3       	brlt	.-46     	; 0xf4e <MENU_init+0x2a>
     f7c:	0e 94 8b 07 	call	0xf16	; 0xf16 <print_cursor>
     f80:	df 91       	pop	r29
     f82:	cf 91       	pop	r28
     f84:	1f 91       	pop	r17
     f86:	0f 91       	pop	r16
     f88:	08 95       	ret

00000f8a <STARTMENU_init>:
     f8a:	0f 93       	push	r16
     f8c:	1f 93       	push	r17
     f8e:	cf 93       	push	r28
     f90:	df 93       	push	r29
     f92:	0e 94 84 06 	call	0xd08	; 0xd08 <OLED_reset>
     f96:	81 e0       	ldi	r24, 0x01	; 1
     f98:	90 e0       	ldi	r25, 0x00	; 0
     f9a:	90 93 27 02 	sts	0x0227, r25	; 0x800227 <menu+0x1>
     f9e:	80 93 26 02 	sts	0x0226, r24	; 0x800226 <menu>
     fa2:	80 91 0a 01 	lds	r24, 0x010A	; 0x80010a <length>
     fa6:	90 91 0b 01 	lds	r25, 0x010B	; 0x80010b <length+0x1>
     faa:	18 16       	cp	r1, r24
     fac:	19 06       	cpc	r1, r25
     fae:	dc f4       	brge	.+54     	; 0xfe6 <STARTMENU_init+0x5c>
     fb0:	0c e0       	ldi	r16, 0x0C	; 12
     fb2:	11 e0       	ldi	r17, 0x01	; 1
     fb4:	c0 e0       	ldi	r28, 0x00	; 0
     fb6:	d0 e0       	ldi	r29, 0x00	; 0
     fb8:	81 e0       	ldi	r24, 0x01	; 1
     fba:	0e 94 69 06 	call	0xcd2	; 0xcd2 <OLED_goto_column>
     fbe:	62 e0       	ldi	r22, 0x02	; 2
     fc0:	70 e0       	ldi	r23, 0x00	; 0
     fc2:	f8 01       	movw	r30, r16
     fc4:	81 91       	ld	r24, Z+
     fc6:	91 91       	ld	r25, Z+
     fc8:	8f 01       	movw	r16, r30
     fca:	0e 94 48 06 	call	0xc90	; 0xc90 <OLED_printf>
     fce:	86 ed       	ldi	r24, 0xD6	; 214
     fd0:	91 e0       	ldi	r25, 0x01	; 1
     fd2:	0e 94 b6 05 	call	0xb6c	; 0xb6c <OLED_print>
     fd6:	21 96       	adiw	r28, 0x01	; 1
     fd8:	80 91 0a 01 	lds	r24, 0x010A	; 0x80010a <length>
     fdc:	90 91 0b 01 	lds	r25, 0x010B	; 0x80010b <length+0x1>
     fe0:	c8 17       	cp	r28, r24
     fe2:	d9 07       	cpc	r29, r25
     fe4:	4c f3       	brlt	.-46     	; 0xfb8 <STARTMENU_init+0x2e>
     fe6:	0e 94 8b 07 	call	0xf16	; 0xf16 <print_cursor>
     fea:	df 91       	pop	r29
     fec:	cf 91       	pop	r28
     fee:	1f 91       	pop	r17
     ff0:	0f 91       	pop	r16
     ff2:	08 95       	ret

00000ff4 <selected_menu>:
	}
}

void selected_menu(void)
{
	if (cursorLine==0 && menu==0)
     ff4:	80 91 25 02 	lds	r24, 0x0225	; 0x800225 <cursorLine>
     ff8:	81 11       	cpse	r24, r1
     ffa:	08 c0       	rjmp	.+16     	; 0x100c <selected_menu+0x18>
     ffc:	80 91 26 02 	lds	r24, 0x0226	; 0x800226 <menu>
    1000:	90 91 27 02 	lds	r25, 0x0227	; 0x800227 <menu+0x1>
    1004:	89 2b       	or	r24, r25
    1006:	51 f5       	brne	.+84     	; 0x105c <selected_menu+0x68>
	{
		STARTMENU_init();
    1008:	0e 94 c5 07 	call	0xf8a	; 0xf8a <STARTMENU_init>
	}
	if (cursorLine==3 && menu==0)
    100c:	80 91 25 02 	lds	r24, 0x0225	; 0x800225 <cursorLine>
    1010:	83 30       	cpi	r24, 0x03	; 3
    1012:	c1 f4       	brne	.+48     	; 0x1044 <selected_menu+0x50>
    1014:	80 91 26 02 	lds	r24, 0x0226	; 0x800226 <menu>
    1018:	90 91 27 02 	lds	r25, 0x0227	; 0x800227 <menu+0x1>
    101c:	89 2b       	or	r24, r25
    101e:	f1 f4       	brne	.+60     	; 0x105c <selected_menu+0x68>
	{   OLED_reset();
    1020:	0e 94 84 06 	call	0xd08	; 0xd08 <OLED_reset>
		OLED_draw_circle(3,60,7);
    1024:	47 e0       	ldi	r20, 0x07	; 7
    1026:	6c e3       	ldi	r22, 0x3C	; 60
    1028:	83 e0       	ldi	r24, 0x03	; 3
    102a:	0e 94 90 06 	call	0xd20	; 0xd20 <OLED_draw_circle>
    102e:	2f ef       	ldi	r18, 0xFF	; 255
    1030:	8f ef       	ldi	r24, 0xFF	; 255
    1032:	9d e1       	ldi	r25, 0x1D	; 29
    1034:	21 50       	subi	r18, 0x01	; 1
    1036:	80 40       	sbci	r24, 0x00	; 0
    1038:	90 40       	sbci	r25, 0x00	; 0
    103a:	e1 f7       	brne	.-8      	; 0x1034 <selected_menu+0x40>
    103c:	00 c0       	rjmp	.+0      	; 0x103e <selected_menu+0x4a>
    103e:	00 00       	nop
		_delay_ms(2000);
		MENU_init();
    1040:	0e 94 92 07 	call	0xf24	; 0xf24 <MENU_init>
		
	}
	
	if (cursorLine==2 && menu==1)
    1044:	80 91 25 02 	lds	r24, 0x0225	; 0x800225 <cursorLine>
    1048:	82 30       	cpi	r24, 0x02	; 2
    104a:	41 f4       	brne	.+16     	; 0x105c <selected_menu+0x68>
    104c:	80 91 26 02 	lds	r24, 0x0226	; 0x800226 <menu>
    1050:	90 91 27 02 	lds	r25, 0x0227	; 0x800227 <menu+0x1>
    1054:	01 97       	sbiw	r24, 0x01	; 1
    1056:	11 f4       	brne	.+4      	; 0x105c <selected_menu+0x68>
	{
		MENU_init();
    1058:	0e 94 92 07 	call	0xf24	; 0xf24 <MENU_init>
    105c:	08 95       	ret

0000105e <__vector_3>:
uint8_t cursorLine = 0;

int length = sizeof(menuList)/sizeof(menuList[0]);

ISR (INT2_vect)
{
    105e:	1f 92       	push	r1
    1060:	0f 92       	push	r0
    1062:	0f b6       	in	r0, 0x3f	; 63
    1064:	0f 92       	push	r0
    1066:	11 24       	eor	r1, r1
    1068:	2f 93       	push	r18
    106a:	3f 93       	push	r19
    106c:	4f 93       	push	r20
    106e:	5f 93       	push	r21
    1070:	6f 93       	push	r22
    1072:	7f 93       	push	r23
    1074:	8f 93       	push	r24
    1076:	9f 93       	push	r25
    1078:	af 93       	push	r26
    107a:	bf 93       	push	r27
    107c:	ef 93       	push	r30
    107e:	ff 93       	push	r31
	printf("BUTTTON pressed \n");
    1080:	81 eb       	ldi	r24, 0xB1	; 177
    1082:	91 e0       	ldi	r25, 0x01	; 1
    1084:	0e 94 41 09 	call	0x1282	; 0x1282 <puts>
	printf("CURSOR POSITION: %d \n",cursorLine+1);   // the cursorLine start from 0 while the rows on the OLED start from one 
    1088:	80 91 25 02 	lds	r24, 0x0225	; 0x800225 <cursorLine>
    108c:	90 e0       	ldi	r25, 0x00	; 0
    108e:	01 96       	adiw	r24, 0x01	; 1
    1090:	9f 93       	push	r25
    1092:	8f 93       	push	r24
    1094:	82 ec       	ldi	r24, 0xC2	; 194
    1096:	91 e0       	ldi	r25, 0x01	; 1
    1098:	9f 93       	push	r25
    109a:	8f 93       	push	r24
    109c:	0e 94 2b 09 	call	0x1256	; 0x1256 <printf>
	selected_menu();
    10a0:	0e 94 fa 07 	call	0xff4	; 0xff4 <selected_menu>
}
    10a4:	0f 90       	pop	r0
    10a6:	0f 90       	pop	r0
    10a8:	0f 90       	pop	r0
    10aa:	0f 90       	pop	r0
    10ac:	ff 91       	pop	r31
    10ae:	ef 91       	pop	r30
    10b0:	bf 91       	pop	r27
    10b2:	af 91       	pop	r26
    10b4:	9f 91       	pop	r25
    10b6:	8f 91       	pop	r24
    10b8:	7f 91       	pop	r23
    10ba:	6f 91       	pop	r22
    10bc:	5f 91       	pop	r21
    10be:	4f 91       	pop	r20
    10c0:	3f 91       	pop	r19
    10c2:	2f 91       	pop	r18
    10c4:	0f 90       	pop	r0
    10c6:	0f be       	out	0x3f, r0	; 63
    10c8:	0f 90       	pop	r0
    10ca:	1f 90       	pop	r1
    10cc:	18 95       	reti

000010ce <RAM_init>:
}


void RAM_init (void)
{
	MCUCR = (1<<SRE);
    10ce:	80 e8       	ldi	r24, 0x80	; 128
    10d0:	85 bf       	out	0x35, r24	; 53
	SFIOR = (1<<XMM2);
    10d2:	80 e2       	ldi	r24, 0x20	; 32
    10d4:	80 bf       	out	0x30, r24	; 48
    10d6:	08 95       	ret

000010d8 <My_serial_Transmit>:
}

int My_serial_Transmit( unsigned char data )
{
	/* Wait for empty transmit buffer */
	while ( !( UCSR0A & (1<<UDRE0)) );
    10d8:	5d 9b       	sbis	0x0b, 5	; 11
    10da:	fe cf       	rjmp	.-4      	; 0x10d8 <My_serial_Transmit>
	/* Put data into buffer, sends the data */
	UDR0 = data;
    10dc:	8c b9       	out	0x0c, r24	; 12
	return(0);
}
    10de:	80 e0       	ldi	r24, 0x00	; 0
    10e0:	90 e0       	ldi	r25, 0x00	; 0
    10e2:	08 95       	ret

000010e4 <My_serial_Receive>:

int My_serial_Receive( void )
{
	/* Wait for data to be received */
	while ( !(UCSR0A & (1<<RXC0)) )
    10e4:	5f 9b       	sbis	0x0b, 7	; 11
    10e6:	fe cf       	rjmp	.-4      	; 0x10e4 <My_serial_Receive>
	;
	/* Get and return received data from buffer */
	return UDR0;
    10e8:	8c b1       	in	r24, 0x0c	; 12
    10ea:	90 e0       	ldi	r25, 0x00	; 0
    10ec:	08 95       	ret

000010ee <My_serial_Init>:


void My_serial_Init( unsigned int ubrr )
{
	/* Set baud rate */
	UBRR0H = (unsigned char)(31>>8);
    10ee:	10 bc       	out	0x20, r1	; 32
	UBRR0L = (unsigned char)31;
    10f0:	8f e1       	ldi	r24, 0x1F	; 31
    10f2:	89 b9       	out	0x09, r24	; 9
	/* Enable receiver and transmitter */
	UCSR0B = (1<<RXEN0)|(1<<TXEN0);
    10f4:	88 e1       	ldi	r24, 0x18	; 24
    10f6:	8a b9       	out	0x0a, r24	; 10
	/* Set frame format: 8data, 2stop bit */
	UCSR0C = (1<<URSEL0)|(1<<USBS0)|(3<<UCSZ00);
    10f8:	8e e8       	ldi	r24, 0x8E	; 142
    10fa:	80 bd       	out	0x20, r24	; 32
	fdevopen(My_serial_Transmit, My_serial_Receive);
    10fc:	62 e7       	ldi	r22, 0x72	; 114
    10fe:	78 e0       	ldi	r23, 0x08	; 8
    1100:	8c e6       	ldi	r24, 0x6C	; 108
    1102:	98 e0       	ldi	r25, 0x08	; 8
    1104:	0e 94 e0 08 	call	0x11c0	; 0x11c0 <fdevopen>
    1108:	08 95       	ret

0000110a <main>:
#define BAUD 9600
#define MYUBRR FOSC/16/BAUD-1


int main( void )
{   
    110a:	cf 93       	push	r28
    110c:	df 93       	push	r29
    110e:	cd b7       	in	r28, 0x3d	; 61
    1110:	de b7       	in	r29, 0x3e	; 62
    1112:	66 97       	sbiw	r28, 0x16	; 22
    1114:	0f b6       	in	r0, 0x3f	; 63
    1116:	f8 94       	cli
    1118:	de bf       	out	0x3e, r29	; 62
    111a:	0f be       	out	0x3f, r0	; 63
    111c:	cd bf       	out	0x3d, r28	; 61
	// initialization of the serial port, function is in communication.h
	My_serial_Init ( MYUBRR );
    111e:	8f e3       	ldi	r24, 0x3F	; 63
    1120:	91 e0       	ldi	r25, 0x01	; 1
    1122:	0e 94 77 08 	call	0x10ee	; 0x10ee <My_serial_Init>
	
	// initialization of the ram, function is in RAMtest.h
	RAM_init();
    1126:	0e 94 67 08 	call	0x10ce	; 0x10ce <RAM_init>
	joystick_init();
    112a:	0e 94 15 07 	call	0xe2a	; 0xe2a <joystick_init>
// 	joy_position dir;
// 	slider_position slider;
	
    //volatile uint8_t *OLED_cmnd = (uint8_t *) 0x1000;
	
	OLED_init();
    112e:	0e 94 f7 04 	call	0x9ee	; 0x9ee <OLED_init>
	OLED_reset();
    1132:	0e 94 84 06 	call	0xd08	; 0xd08 <OLED_reset>
	MENU_init();
    1136:	0e 94 92 07 	call	0xf24	; 0xf24 <MENU_init>
	CAN_init();
    113a:	0e 94 ff 03 	call	0x7fe	; 0x7fe <CAN_init>
	
	CAN_message message;
	message.id = 1;
    113e:	81 e0       	ldi	r24, 0x01	; 1
    1140:	90 e0       	ldi	r25, 0x00	; 0
    1142:	9a 83       	std	Y+2, r25	; 0x02
    1144:	89 83       	std	Y+1, r24	; 0x01
	message.length = 3;
    1146:	83 e0       	ldi	r24, 0x03	; 3
    1148:	8b 83       	std	Y+3, r24	; 0x03
	message.data[0] = 5;
    114a:	85 e0       	ldi	r24, 0x05	; 5
    114c:	8c 83       	std	Y+4, r24	; 0x04
	message.data[1] = 2;
    114e:	82 e0       	ldi	r24, 0x02	; 2
    1150:	8d 83       	std	Y+5, r24	; 0x05
	message.data[2] = 7;
    1152:	87 e0       	ldi	r24, 0x07	; 7
    1154:	8e 83       	std	Y+6, r24	; 0x06
	{
		CAN_message_send(&message);
		_delay_ms(30);
		//CAN_data_receive();
		CAN_message msg = CAN_data_receive();
		printf("THE MESSAGE IS: %d %d %d \n\r", msg.data[0], msg.data[1], msg.data[2]);
    1156:	05 e0       	ldi	r16, 0x05	; 5
    1158:	12 e0       	ldi	r17, 0x02	; 2
	message.data[0] = 5;
	message.data[1] = 2;
	message.data[2] = 7;
	while (1)
	{
		CAN_message_send(&message);
    115a:	ce 01       	movw	r24, r28
    115c:	01 96       	adiw	r24, 0x01	; 1
    115e:	0e 94 20 04 	call	0x840	; 0x840 <CAN_message_send>
    1162:	8f ef       	ldi	r24, 0xFF	; 255
    1164:	9f e8       	ldi	r25, 0x8F	; 143
    1166:	01 97       	sbiw	r24, 0x01	; 1
    1168:	f1 f7       	brne	.-4      	; 0x1166 <main+0x5c>
    116a:	00 c0       	rjmp	.+0      	; 0x116c <main+0x62>
    116c:	00 00       	nop
		_delay_ms(30);
		//CAN_data_receive();
		CAN_message msg = CAN_data_receive();
    116e:	ce 01       	movw	r24, r28
    1170:	0c 96       	adiw	r24, 0x0c	; 12
    1172:	0e 94 69 04 	call	0x8d2	; 0x8d2 <CAN_data_receive>
		printf("THE MESSAGE IS: %d %d %d \n\r", msg.data[0], msg.data[1], msg.data[2]);
    1176:	89 89       	ldd	r24, Y+17	; 0x11
    1178:	1f 92       	push	r1
    117a:	8f 93       	push	r24
    117c:	88 89       	ldd	r24, Y+16	; 0x10
    117e:	1f 92       	push	r1
    1180:	8f 93       	push	r24
    1182:	8f 85       	ldd	r24, Y+15	; 0x0f
    1184:	1f 92       	push	r1
    1186:	8f 93       	push	r24
    1188:	1f 93       	push	r17
    118a:	0f 93       	push	r16
    118c:	0e 94 2b 09 	call	0x1256	; 0x1256 <printf>
    1190:	0f b6       	in	r0, 0x3f	; 63
    1192:	f8 94       	cli
    1194:	de bf       	out	0x3e, r29	; 62
    1196:	0f be       	out	0x3f, r0	; 63
    1198:	cd bf       	out	0x3d, r28	; 61
    119a:	df cf       	rjmp	.-66     	; 0x115a <main+0x50>

0000119c <SPI_Init>:

/*THIS IS FROM THE DATASHEET P160 */

void SPI_Init(){
  //Set SPI_SS, SPI_MOSI, and SPI_SCK as outputs
  DDRB |= (1 << SPI_SS) | (1 << SPI_MOSI) | (1 << SPI_SCK);
    119c:	87 b3       	in	r24, 0x17	; 23
    119e:	80 6b       	ori	r24, 0xB0	; 176
    11a0:	87 bb       	out	0x17, r24	; 23
  DDRB &= ~(1 << SPI_MISO);
    11a2:	be 98       	cbi	0x17, 6	; 23
  //PORTB |= (1 << SPI_INT);

  // Enabling SPI in master mode and set clock rate fosc/16
  SPCR = (1 << SPE) | (1 << MSTR) | (1 << SPR0);
    11a4:	81 e5       	ldi	r24, 0x51	; 81
    11a6:	8d b9       	out	0x0d, r24	; 13
    11a8:	08 95       	ret

000011aa <SPI_send>:

void SPI_send(char data){
	//PORTB &= ~(1 << SPI_SS);

  /* Start transmission */
  SPDR = data;
    11aa:	8f b9       	out	0x0f, r24	; 15

  /* Wait for transmission complete */
  while(!(SPSR & (1<<SPIF)));
    11ac:	77 9b       	sbis	0x0e, 7	; 14
    11ae:	fe cf       	rjmp	.-4      	; 0x11ac <SPI_send+0x2>

	//PORTB |= (1 << SPI_SS);
}
    11b0:	08 95       	ret

000011b2 <SPI_read>:


char SPI_read (){
  //send a dummy bite
	SPI_send(0);
    11b2:	80 e0       	ldi	r24, 0x00	; 0
    11b4:	0e 94 d5 08 	call	0x11aa	; 0x11aa <SPI_send>
  /* Wait for reception complete */
  while(!(SPSR & (1<<SPIF)));
    11b8:	77 9b       	sbis	0x0e, 7	; 14
    11ba:	fe cf       	rjmp	.-4      	; 0x11b8 <SPI_read+0x6>
  /* Return data register */
  return SPDR;
    11bc:	8f b1       	in	r24, 0x0f	; 15
}
    11be:	08 95       	ret

000011c0 <fdevopen>:
    11c0:	0f 93       	push	r16
    11c2:	1f 93       	push	r17
    11c4:	cf 93       	push	r28
    11c6:	df 93       	push	r29
    11c8:	00 97       	sbiw	r24, 0x00	; 0
    11ca:	31 f4       	brne	.+12     	; 0x11d8 <fdevopen+0x18>
    11cc:	61 15       	cp	r22, r1
    11ce:	71 05       	cpc	r23, r1
    11d0:	19 f4       	brne	.+6      	; 0x11d8 <fdevopen+0x18>
    11d2:	80 e0       	ldi	r24, 0x00	; 0
    11d4:	90 e0       	ldi	r25, 0x00	; 0
    11d6:	3a c0       	rjmp	.+116    	; 0x124c <fdevopen+0x8c>
    11d8:	8b 01       	movw	r16, r22
    11da:	ec 01       	movw	r28, r24
    11dc:	6e e0       	ldi	r22, 0x0E	; 14
    11de:	70 e0       	ldi	r23, 0x00	; 0
    11e0:	81 e0       	ldi	r24, 0x01	; 1
    11e2:	90 e0       	ldi	r25, 0x00	; 0
    11e4:	0e 94 52 0b 	call	0x16a4	; 0x16a4 <calloc>
    11e8:	fc 01       	movw	r30, r24
    11ea:	89 2b       	or	r24, r25
    11ec:	91 f3       	breq	.-28     	; 0x11d2 <fdevopen+0x12>
    11ee:	80 e8       	ldi	r24, 0x80	; 128
    11f0:	83 83       	std	Z+3, r24	; 0x03
    11f2:	01 15       	cp	r16, r1
    11f4:	11 05       	cpc	r17, r1
    11f6:	71 f0       	breq	.+28     	; 0x1214 <fdevopen+0x54>
    11f8:	13 87       	std	Z+11, r17	; 0x0b
    11fa:	02 87       	std	Z+10, r16	; 0x0a
    11fc:	81 e8       	ldi	r24, 0x81	; 129
    11fe:	83 83       	std	Z+3, r24	; 0x03
    1200:	80 91 28 02 	lds	r24, 0x0228	; 0x800228 <__iob>
    1204:	90 91 29 02 	lds	r25, 0x0229	; 0x800229 <__iob+0x1>
    1208:	89 2b       	or	r24, r25
    120a:	21 f4       	brne	.+8      	; 0x1214 <fdevopen+0x54>
    120c:	f0 93 29 02 	sts	0x0229, r31	; 0x800229 <__iob+0x1>
    1210:	e0 93 28 02 	sts	0x0228, r30	; 0x800228 <__iob>
    1214:	20 97       	sbiw	r28, 0x00	; 0
    1216:	c9 f0       	breq	.+50     	; 0x124a <fdevopen+0x8a>
    1218:	d1 87       	std	Z+9, r29	; 0x09
    121a:	c0 87       	std	Z+8, r28	; 0x08
    121c:	83 81       	ldd	r24, Z+3	; 0x03
    121e:	82 60       	ori	r24, 0x02	; 2
    1220:	83 83       	std	Z+3, r24	; 0x03
    1222:	80 91 2a 02 	lds	r24, 0x022A	; 0x80022a <__iob+0x2>
    1226:	90 91 2b 02 	lds	r25, 0x022B	; 0x80022b <__iob+0x3>
    122a:	89 2b       	or	r24, r25
    122c:	71 f4       	brne	.+28     	; 0x124a <fdevopen+0x8a>
    122e:	f0 93 2b 02 	sts	0x022B, r31	; 0x80022b <__iob+0x3>
    1232:	e0 93 2a 02 	sts	0x022A, r30	; 0x80022a <__iob+0x2>
    1236:	80 91 2c 02 	lds	r24, 0x022C	; 0x80022c <__iob+0x4>
    123a:	90 91 2d 02 	lds	r25, 0x022D	; 0x80022d <__iob+0x5>
    123e:	89 2b       	or	r24, r25
    1240:	21 f4       	brne	.+8      	; 0x124a <fdevopen+0x8a>
    1242:	f0 93 2d 02 	sts	0x022D, r31	; 0x80022d <__iob+0x5>
    1246:	e0 93 2c 02 	sts	0x022C, r30	; 0x80022c <__iob+0x4>
    124a:	cf 01       	movw	r24, r30
    124c:	df 91       	pop	r29
    124e:	cf 91       	pop	r28
    1250:	1f 91       	pop	r17
    1252:	0f 91       	pop	r16
    1254:	08 95       	ret

00001256 <printf>:
    1256:	a0 e0       	ldi	r26, 0x00	; 0
    1258:	b0 e0       	ldi	r27, 0x00	; 0
    125a:	e1 e3       	ldi	r30, 0x31	; 49
    125c:	f9 e0       	ldi	r31, 0x09	; 9
    125e:	0c 94 56 0d 	jmp	0x1aac	; 0x1aac <__prologue_saves__+0x20>
    1262:	ae 01       	movw	r20, r28
    1264:	4b 5f       	subi	r20, 0xFB	; 251
    1266:	5f 4f       	sbci	r21, 0xFF	; 255
    1268:	fa 01       	movw	r30, r20
    126a:	61 91       	ld	r22, Z+
    126c:	71 91       	ld	r23, Z+
    126e:	af 01       	movw	r20, r30
    1270:	80 91 2a 02 	lds	r24, 0x022A	; 0x80022a <__iob+0x2>
    1274:	90 91 2b 02 	lds	r25, 0x022B	; 0x80022b <__iob+0x3>
    1278:	0e 94 71 09 	call	0x12e2	; 0x12e2 <vfprintf>
    127c:	e2 e0       	ldi	r30, 0x02	; 2
    127e:	0c 94 72 0d 	jmp	0x1ae4	; 0x1ae4 <__epilogue_restores__+0x20>

00001282 <puts>:
    1282:	0f 93       	push	r16
    1284:	1f 93       	push	r17
    1286:	cf 93       	push	r28
    1288:	df 93       	push	r29
    128a:	e0 91 2a 02 	lds	r30, 0x022A	; 0x80022a <__iob+0x2>
    128e:	f0 91 2b 02 	lds	r31, 0x022B	; 0x80022b <__iob+0x3>
    1292:	23 81       	ldd	r18, Z+3	; 0x03
    1294:	21 ff       	sbrs	r18, 1
    1296:	1b c0       	rjmp	.+54     	; 0x12ce <puts+0x4c>
    1298:	8c 01       	movw	r16, r24
    129a:	d0 e0       	ldi	r29, 0x00	; 0
    129c:	c0 e0       	ldi	r28, 0x00	; 0
    129e:	f8 01       	movw	r30, r16
    12a0:	81 91       	ld	r24, Z+
    12a2:	8f 01       	movw	r16, r30
    12a4:	60 91 2a 02 	lds	r22, 0x022A	; 0x80022a <__iob+0x2>
    12a8:	70 91 2b 02 	lds	r23, 0x022B	; 0x80022b <__iob+0x3>
    12ac:	db 01       	movw	r26, r22
    12ae:	18 96       	adiw	r26, 0x08	; 8
    12b0:	ed 91       	ld	r30, X+
    12b2:	fc 91       	ld	r31, X
    12b4:	19 97       	sbiw	r26, 0x09	; 9
    12b6:	88 23       	and	r24, r24
    12b8:	31 f0       	breq	.+12     	; 0x12c6 <puts+0x44>
    12ba:	09 95       	icall
    12bc:	89 2b       	or	r24, r25
    12be:	79 f3       	breq	.-34     	; 0x129e <puts+0x1c>
    12c0:	df ef       	ldi	r29, 0xFF	; 255
    12c2:	cf ef       	ldi	r28, 0xFF	; 255
    12c4:	ec cf       	rjmp	.-40     	; 0x129e <puts+0x1c>
    12c6:	8a e0       	ldi	r24, 0x0A	; 10
    12c8:	09 95       	icall
    12ca:	89 2b       	or	r24, r25
    12cc:	19 f0       	breq	.+6      	; 0x12d4 <puts+0x52>
    12ce:	8f ef       	ldi	r24, 0xFF	; 255
    12d0:	9f ef       	ldi	r25, 0xFF	; 255
    12d2:	02 c0       	rjmp	.+4      	; 0x12d8 <puts+0x56>
    12d4:	8d 2f       	mov	r24, r29
    12d6:	9c 2f       	mov	r25, r28
    12d8:	df 91       	pop	r29
    12da:	cf 91       	pop	r28
    12dc:	1f 91       	pop	r17
    12de:	0f 91       	pop	r16
    12e0:	08 95       	ret

000012e2 <vfprintf>:
    12e2:	ab e0       	ldi	r26, 0x0B	; 11
    12e4:	b0 e0       	ldi	r27, 0x00	; 0
    12e6:	e7 e7       	ldi	r30, 0x77	; 119
    12e8:	f9 e0       	ldi	r31, 0x09	; 9
    12ea:	0c 94 46 0d 	jmp	0x1a8c	; 0x1a8c <__prologue_saves__>
    12ee:	6c 01       	movw	r12, r24
    12f0:	7b 01       	movw	r14, r22
    12f2:	8a 01       	movw	r16, r20
    12f4:	fc 01       	movw	r30, r24
    12f6:	17 82       	std	Z+7, r1	; 0x07
    12f8:	16 82       	std	Z+6, r1	; 0x06
    12fa:	83 81       	ldd	r24, Z+3	; 0x03
    12fc:	81 ff       	sbrs	r24, 1
    12fe:	cc c1       	rjmp	.+920    	; 0x1698 <vfprintf+0x3b6>
    1300:	ce 01       	movw	r24, r28
    1302:	01 96       	adiw	r24, 0x01	; 1
    1304:	3c 01       	movw	r6, r24
    1306:	f6 01       	movw	r30, r12
    1308:	93 81       	ldd	r25, Z+3	; 0x03
    130a:	f7 01       	movw	r30, r14
    130c:	93 fd       	sbrc	r25, 3
    130e:	85 91       	lpm	r24, Z+
    1310:	93 ff       	sbrs	r25, 3
    1312:	81 91       	ld	r24, Z+
    1314:	7f 01       	movw	r14, r30
    1316:	88 23       	and	r24, r24
    1318:	09 f4       	brne	.+2      	; 0x131c <vfprintf+0x3a>
    131a:	ba c1       	rjmp	.+884    	; 0x1690 <vfprintf+0x3ae>
    131c:	85 32       	cpi	r24, 0x25	; 37
    131e:	39 f4       	brne	.+14     	; 0x132e <vfprintf+0x4c>
    1320:	93 fd       	sbrc	r25, 3
    1322:	85 91       	lpm	r24, Z+
    1324:	93 ff       	sbrs	r25, 3
    1326:	81 91       	ld	r24, Z+
    1328:	7f 01       	movw	r14, r30
    132a:	85 32       	cpi	r24, 0x25	; 37
    132c:	29 f4       	brne	.+10     	; 0x1338 <vfprintf+0x56>
    132e:	b6 01       	movw	r22, r12
    1330:	90 e0       	ldi	r25, 0x00	; 0
    1332:	0e 94 ac 0c 	call	0x1958	; 0x1958 <fputc>
    1336:	e7 cf       	rjmp	.-50     	; 0x1306 <vfprintf+0x24>
    1338:	91 2c       	mov	r9, r1
    133a:	21 2c       	mov	r2, r1
    133c:	31 2c       	mov	r3, r1
    133e:	ff e1       	ldi	r31, 0x1F	; 31
    1340:	f3 15       	cp	r31, r3
    1342:	d8 f0       	brcs	.+54     	; 0x137a <vfprintf+0x98>
    1344:	8b 32       	cpi	r24, 0x2B	; 43
    1346:	79 f0       	breq	.+30     	; 0x1366 <vfprintf+0x84>
    1348:	38 f4       	brcc	.+14     	; 0x1358 <vfprintf+0x76>
    134a:	80 32       	cpi	r24, 0x20	; 32
    134c:	79 f0       	breq	.+30     	; 0x136c <vfprintf+0x8a>
    134e:	83 32       	cpi	r24, 0x23	; 35
    1350:	a1 f4       	brne	.+40     	; 0x137a <vfprintf+0x98>
    1352:	23 2d       	mov	r18, r3
    1354:	20 61       	ori	r18, 0x10	; 16
    1356:	1d c0       	rjmp	.+58     	; 0x1392 <vfprintf+0xb0>
    1358:	8d 32       	cpi	r24, 0x2D	; 45
    135a:	61 f0       	breq	.+24     	; 0x1374 <vfprintf+0x92>
    135c:	80 33       	cpi	r24, 0x30	; 48
    135e:	69 f4       	brne	.+26     	; 0x137a <vfprintf+0x98>
    1360:	23 2d       	mov	r18, r3
    1362:	21 60       	ori	r18, 0x01	; 1
    1364:	16 c0       	rjmp	.+44     	; 0x1392 <vfprintf+0xb0>
    1366:	83 2d       	mov	r24, r3
    1368:	82 60       	ori	r24, 0x02	; 2
    136a:	38 2e       	mov	r3, r24
    136c:	e3 2d       	mov	r30, r3
    136e:	e4 60       	ori	r30, 0x04	; 4
    1370:	3e 2e       	mov	r3, r30
    1372:	2a c0       	rjmp	.+84     	; 0x13c8 <vfprintf+0xe6>
    1374:	f3 2d       	mov	r31, r3
    1376:	f8 60       	ori	r31, 0x08	; 8
    1378:	1d c0       	rjmp	.+58     	; 0x13b4 <vfprintf+0xd2>
    137a:	37 fc       	sbrc	r3, 7
    137c:	2d c0       	rjmp	.+90     	; 0x13d8 <vfprintf+0xf6>
    137e:	20 ed       	ldi	r18, 0xD0	; 208
    1380:	28 0f       	add	r18, r24
    1382:	2a 30       	cpi	r18, 0x0A	; 10
    1384:	40 f0       	brcs	.+16     	; 0x1396 <vfprintf+0xb4>
    1386:	8e 32       	cpi	r24, 0x2E	; 46
    1388:	b9 f4       	brne	.+46     	; 0x13b8 <vfprintf+0xd6>
    138a:	36 fc       	sbrc	r3, 6
    138c:	81 c1       	rjmp	.+770    	; 0x1690 <vfprintf+0x3ae>
    138e:	23 2d       	mov	r18, r3
    1390:	20 64       	ori	r18, 0x40	; 64
    1392:	32 2e       	mov	r3, r18
    1394:	19 c0       	rjmp	.+50     	; 0x13c8 <vfprintf+0xe6>
    1396:	36 fe       	sbrs	r3, 6
    1398:	06 c0       	rjmp	.+12     	; 0x13a6 <vfprintf+0xc4>
    139a:	8a e0       	ldi	r24, 0x0A	; 10
    139c:	98 9e       	mul	r9, r24
    139e:	20 0d       	add	r18, r0
    13a0:	11 24       	eor	r1, r1
    13a2:	92 2e       	mov	r9, r18
    13a4:	11 c0       	rjmp	.+34     	; 0x13c8 <vfprintf+0xe6>
    13a6:	ea e0       	ldi	r30, 0x0A	; 10
    13a8:	2e 9e       	mul	r2, r30
    13aa:	20 0d       	add	r18, r0
    13ac:	11 24       	eor	r1, r1
    13ae:	22 2e       	mov	r2, r18
    13b0:	f3 2d       	mov	r31, r3
    13b2:	f0 62       	ori	r31, 0x20	; 32
    13b4:	3f 2e       	mov	r3, r31
    13b6:	08 c0       	rjmp	.+16     	; 0x13c8 <vfprintf+0xe6>
    13b8:	8c 36       	cpi	r24, 0x6C	; 108
    13ba:	21 f4       	brne	.+8      	; 0x13c4 <vfprintf+0xe2>
    13bc:	83 2d       	mov	r24, r3
    13be:	80 68       	ori	r24, 0x80	; 128
    13c0:	38 2e       	mov	r3, r24
    13c2:	02 c0       	rjmp	.+4      	; 0x13c8 <vfprintf+0xe6>
    13c4:	88 36       	cpi	r24, 0x68	; 104
    13c6:	41 f4       	brne	.+16     	; 0x13d8 <vfprintf+0xf6>
    13c8:	f7 01       	movw	r30, r14
    13ca:	93 fd       	sbrc	r25, 3
    13cc:	85 91       	lpm	r24, Z+
    13ce:	93 ff       	sbrs	r25, 3
    13d0:	81 91       	ld	r24, Z+
    13d2:	7f 01       	movw	r14, r30
    13d4:	81 11       	cpse	r24, r1
    13d6:	b3 cf       	rjmp	.-154    	; 0x133e <vfprintf+0x5c>
    13d8:	98 2f       	mov	r25, r24
    13da:	9f 7d       	andi	r25, 0xDF	; 223
    13dc:	95 54       	subi	r25, 0x45	; 69
    13de:	93 30       	cpi	r25, 0x03	; 3
    13e0:	28 f4       	brcc	.+10     	; 0x13ec <vfprintf+0x10a>
    13e2:	0c 5f       	subi	r16, 0xFC	; 252
    13e4:	1f 4f       	sbci	r17, 0xFF	; 255
    13e6:	9f e3       	ldi	r25, 0x3F	; 63
    13e8:	99 83       	std	Y+1, r25	; 0x01
    13ea:	0d c0       	rjmp	.+26     	; 0x1406 <vfprintf+0x124>
    13ec:	83 36       	cpi	r24, 0x63	; 99
    13ee:	31 f0       	breq	.+12     	; 0x13fc <vfprintf+0x11a>
    13f0:	83 37       	cpi	r24, 0x73	; 115
    13f2:	71 f0       	breq	.+28     	; 0x1410 <vfprintf+0x12e>
    13f4:	83 35       	cpi	r24, 0x53	; 83
    13f6:	09 f0       	breq	.+2      	; 0x13fa <vfprintf+0x118>
    13f8:	59 c0       	rjmp	.+178    	; 0x14ac <vfprintf+0x1ca>
    13fa:	21 c0       	rjmp	.+66     	; 0x143e <vfprintf+0x15c>
    13fc:	f8 01       	movw	r30, r16
    13fe:	80 81       	ld	r24, Z
    1400:	89 83       	std	Y+1, r24	; 0x01
    1402:	0e 5f       	subi	r16, 0xFE	; 254
    1404:	1f 4f       	sbci	r17, 0xFF	; 255
    1406:	88 24       	eor	r8, r8
    1408:	83 94       	inc	r8
    140a:	91 2c       	mov	r9, r1
    140c:	53 01       	movw	r10, r6
    140e:	13 c0       	rjmp	.+38     	; 0x1436 <vfprintf+0x154>
    1410:	28 01       	movw	r4, r16
    1412:	f2 e0       	ldi	r31, 0x02	; 2
    1414:	4f 0e       	add	r4, r31
    1416:	51 1c       	adc	r5, r1
    1418:	f8 01       	movw	r30, r16
    141a:	a0 80       	ld	r10, Z
    141c:	b1 80       	ldd	r11, Z+1	; 0x01
    141e:	36 fe       	sbrs	r3, 6
    1420:	03 c0       	rjmp	.+6      	; 0x1428 <vfprintf+0x146>
    1422:	69 2d       	mov	r22, r9
    1424:	70 e0       	ldi	r23, 0x00	; 0
    1426:	02 c0       	rjmp	.+4      	; 0x142c <vfprintf+0x14a>
    1428:	6f ef       	ldi	r22, 0xFF	; 255
    142a:	7f ef       	ldi	r23, 0xFF	; 255
    142c:	c5 01       	movw	r24, r10
    142e:	0e 94 a1 0c 	call	0x1942	; 0x1942 <strnlen>
    1432:	4c 01       	movw	r8, r24
    1434:	82 01       	movw	r16, r4
    1436:	f3 2d       	mov	r31, r3
    1438:	ff 77       	andi	r31, 0x7F	; 127
    143a:	3f 2e       	mov	r3, r31
    143c:	16 c0       	rjmp	.+44     	; 0x146a <vfprintf+0x188>
    143e:	28 01       	movw	r4, r16
    1440:	22 e0       	ldi	r18, 0x02	; 2
    1442:	42 0e       	add	r4, r18
    1444:	51 1c       	adc	r5, r1
    1446:	f8 01       	movw	r30, r16
    1448:	a0 80       	ld	r10, Z
    144a:	b1 80       	ldd	r11, Z+1	; 0x01
    144c:	36 fe       	sbrs	r3, 6
    144e:	03 c0       	rjmp	.+6      	; 0x1456 <vfprintf+0x174>
    1450:	69 2d       	mov	r22, r9
    1452:	70 e0       	ldi	r23, 0x00	; 0
    1454:	02 c0       	rjmp	.+4      	; 0x145a <vfprintf+0x178>
    1456:	6f ef       	ldi	r22, 0xFF	; 255
    1458:	7f ef       	ldi	r23, 0xFF	; 255
    145a:	c5 01       	movw	r24, r10
    145c:	0e 94 8f 0c 	call	0x191e	; 0x191e <strnlen_P>
    1460:	4c 01       	movw	r8, r24
    1462:	f3 2d       	mov	r31, r3
    1464:	f0 68       	ori	r31, 0x80	; 128
    1466:	3f 2e       	mov	r3, r31
    1468:	82 01       	movw	r16, r4
    146a:	33 fc       	sbrc	r3, 3
    146c:	1b c0       	rjmp	.+54     	; 0x14a4 <vfprintf+0x1c2>
    146e:	82 2d       	mov	r24, r2
    1470:	90 e0       	ldi	r25, 0x00	; 0
    1472:	88 16       	cp	r8, r24
    1474:	99 06       	cpc	r9, r25
    1476:	b0 f4       	brcc	.+44     	; 0x14a4 <vfprintf+0x1c2>
    1478:	b6 01       	movw	r22, r12
    147a:	80 e2       	ldi	r24, 0x20	; 32
    147c:	90 e0       	ldi	r25, 0x00	; 0
    147e:	0e 94 ac 0c 	call	0x1958	; 0x1958 <fputc>
    1482:	2a 94       	dec	r2
    1484:	f4 cf       	rjmp	.-24     	; 0x146e <vfprintf+0x18c>
    1486:	f5 01       	movw	r30, r10
    1488:	37 fc       	sbrc	r3, 7
    148a:	85 91       	lpm	r24, Z+
    148c:	37 fe       	sbrs	r3, 7
    148e:	81 91       	ld	r24, Z+
    1490:	5f 01       	movw	r10, r30
    1492:	b6 01       	movw	r22, r12
    1494:	90 e0       	ldi	r25, 0x00	; 0
    1496:	0e 94 ac 0c 	call	0x1958	; 0x1958 <fputc>
    149a:	21 10       	cpse	r2, r1
    149c:	2a 94       	dec	r2
    149e:	21 e0       	ldi	r18, 0x01	; 1
    14a0:	82 1a       	sub	r8, r18
    14a2:	91 08       	sbc	r9, r1
    14a4:	81 14       	cp	r8, r1
    14a6:	91 04       	cpc	r9, r1
    14a8:	71 f7       	brne	.-36     	; 0x1486 <vfprintf+0x1a4>
    14aa:	e8 c0       	rjmp	.+464    	; 0x167c <vfprintf+0x39a>
    14ac:	84 36       	cpi	r24, 0x64	; 100
    14ae:	11 f0       	breq	.+4      	; 0x14b4 <vfprintf+0x1d2>
    14b0:	89 36       	cpi	r24, 0x69	; 105
    14b2:	41 f5       	brne	.+80     	; 0x1504 <vfprintf+0x222>
    14b4:	f8 01       	movw	r30, r16
    14b6:	37 fe       	sbrs	r3, 7
    14b8:	07 c0       	rjmp	.+14     	; 0x14c8 <vfprintf+0x1e6>
    14ba:	60 81       	ld	r22, Z
    14bc:	71 81       	ldd	r23, Z+1	; 0x01
    14be:	82 81       	ldd	r24, Z+2	; 0x02
    14c0:	93 81       	ldd	r25, Z+3	; 0x03
    14c2:	0c 5f       	subi	r16, 0xFC	; 252
    14c4:	1f 4f       	sbci	r17, 0xFF	; 255
    14c6:	08 c0       	rjmp	.+16     	; 0x14d8 <vfprintf+0x1f6>
    14c8:	60 81       	ld	r22, Z
    14ca:	71 81       	ldd	r23, Z+1	; 0x01
    14cc:	07 2e       	mov	r0, r23
    14ce:	00 0c       	add	r0, r0
    14d0:	88 0b       	sbc	r24, r24
    14d2:	99 0b       	sbc	r25, r25
    14d4:	0e 5f       	subi	r16, 0xFE	; 254
    14d6:	1f 4f       	sbci	r17, 0xFF	; 255
    14d8:	f3 2d       	mov	r31, r3
    14da:	ff 76       	andi	r31, 0x6F	; 111
    14dc:	3f 2e       	mov	r3, r31
    14de:	97 ff       	sbrs	r25, 7
    14e0:	09 c0       	rjmp	.+18     	; 0x14f4 <vfprintf+0x212>
    14e2:	90 95       	com	r25
    14e4:	80 95       	com	r24
    14e6:	70 95       	com	r23
    14e8:	61 95       	neg	r22
    14ea:	7f 4f       	sbci	r23, 0xFF	; 255
    14ec:	8f 4f       	sbci	r24, 0xFF	; 255
    14ee:	9f 4f       	sbci	r25, 0xFF	; 255
    14f0:	f0 68       	ori	r31, 0x80	; 128
    14f2:	3f 2e       	mov	r3, r31
    14f4:	2a e0       	ldi	r18, 0x0A	; 10
    14f6:	30 e0       	ldi	r19, 0x00	; 0
    14f8:	a3 01       	movw	r20, r6
    14fa:	0e 94 e8 0c 	call	0x19d0	; 0x19d0 <__ultoa_invert>
    14fe:	88 2e       	mov	r8, r24
    1500:	86 18       	sub	r8, r6
    1502:	45 c0       	rjmp	.+138    	; 0x158e <vfprintf+0x2ac>
    1504:	85 37       	cpi	r24, 0x75	; 117
    1506:	31 f4       	brne	.+12     	; 0x1514 <vfprintf+0x232>
    1508:	23 2d       	mov	r18, r3
    150a:	2f 7e       	andi	r18, 0xEF	; 239
    150c:	b2 2e       	mov	r11, r18
    150e:	2a e0       	ldi	r18, 0x0A	; 10
    1510:	30 e0       	ldi	r19, 0x00	; 0
    1512:	25 c0       	rjmp	.+74     	; 0x155e <vfprintf+0x27c>
    1514:	93 2d       	mov	r25, r3
    1516:	99 7f       	andi	r25, 0xF9	; 249
    1518:	b9 2e       	mov	r11, r25
    151a:	8f 36       	cpi	r24, 0x6F	; 111
    151c:	c1 f0       	breq	.+48     	; 0x154e <vfprintf+0x26c>
    151e:	18 f4       	brcc	.+6      	; 0x1526 <vfprintf+0x244>
    1520:	88 35       	cpi	r24, 0x58	; 88
    1522:	79 f0       	breq	.+30     	; 0x1542 <vfprintf+0x260>
    1524:	b5 c0       	rjmp	.+362    	; 0x1690 <vfprintf+0x3ae>
    1526:	80 37       	cpi	r24, 0x70	; 112
    1528:	19 f0       	breq	.+6      	; 0x1530 <vfprintf+0x24e>
    152a:	88 37       	cpi	r24, 0x78	; 120
    152c:	21 f0       	breq	.+8      	; 0x1536 <vfprintf+0x254>
    152e:	b0 c0       	rjmp	.+352    	; 0x1690 <vfprintf+0x3ae>
    1530:	e9 2f       	mov	r30, r25
    1532:	e0 61       	ori	r30, 0x10	; 16
    1534:	be 2e       	mov	r11, r30
    1536:	b4 fe       	sbrs	r11, 4
    1538:	0d c0       	rjmp	.+26     	; 0x1554 <vfprintf+0x272>
    153a:	fb 2d       	mov	r31, r11
    153c:	f4 60       	ori	r31, 0x04	; 4
    153e:	bf 2e       	mov	r11, r31
    1540:	09 c0       	rjmp	.+18     	; 0x1554 <vfprintf+0x272>
    1542:	34 fe       	sbrs	r3, 4
    1544:	0a c0       	rjmp	.+20     	; 0x155a <vfprintf+0x278>
    1546:	29 2f       	mov	r18, r25
    1548:	26 60       	ori	r18, 0x06	; 6
    154a:	b2 2e       	mov	r11, r18
    154c:	06 c0       	rjmp	.+12     	; 0x155a <vfprintf+0x278>
    154e:	28 e0       	ldi	r18, 0x08	; 8
    1550:	30 e0       	ldi	r19, 0x00	; 0
    1552:	05 c0       	rjmp	.+10     	; 0x155e <vfprintf+0x27c>
    1554:	20 e1       	ldi	r18, 0x10	; 16
    1556:	30 e0       	ldi	r19, 0x00	; 0
    1558:	02 c0       	rjmp	.+4      	; 0x155e <vfprintf+0x27c>
    155a:	20 e1       	ldi	r18, 0x10	; 16
    155c:	32 e0       	ldi	r19, 0x02	; 2
    155e:	f8 01       	movw	r30, r16
    1560:	b7 fe       	sbrs	r11, 7
    1562:	07 c0       	rjmp	.+14     	; 0x1572 <vfprintf+0x290>
    1564:	60 81       	ld	r22, Z
    1566:	71 81       	ldd	r23, Z+1	; 0x01
    1568:	82 81       	ldd	r24, Z+2	; 0x02
    156a:	93 81       	ldd	r25, Z+3	; 0x03
    156c:	0c 5f       	subi	r16, 0xFC	; 252
    156e:	1f 4f       	sbci	r17, 0xFF	; 255
    1570:	06 c0       	rjmp	.+12     	; 0x157e <vfprintf+0x29c>
    1572:	60 81       	ld	r22, Z
    1574:	71 81       	ldd	r23, Z+1	; 0x01
    1576:	80 e0       	ldi	r24, 0x00	; 0
    1578:	90 e0       	ldi	r25, 0x00	; 0
    157a:	0e 5f       	subi	r16, 0xFE	; 254
    157c:	1f 4f       	sbci	r17, 0xFF	; 255
    157e:	a3 01       	movw	r20, r6
    1580:	0e 94 e8 0c 	call	0x19d0	; 0x19d0 <__ultoa_invert>
    1584:	88 2e       	mov	r8, r24
    1586:	86 18       	sub	r8, r6
    1588:	fb 2d       	mov	r31, r11
    158a:	ff 77       	andi	r31, 0x7F	; 127
    158c:	3f 2e       	mov	r3, r31
    158e:	36 fe       	sbrs	r3, 6
    1590:	0d c0       	rjmp	.+26     	; 0x15ac <vfprintf+0x2ca>
    1592:	23 2d       	mov	r18, r3
    1594:	2e 7f       	andi	r18, 0xFE	; 254
    1596:	a2 2e       	mov	r10, r18
    1598:	89 14       	cp	r8, r9
    159a:	58 f4       	brcc	.+22     	; 0x15b2 <vfprintf+0x2d0>
    159c:	34 fe       	sbrs	r3, 4
    159e:	0b c0       	rjmp	.+22     	; 0x15b6 <vfprintf+0x2d4>
    15a0:	32 fc       	sbrc	r3, 2
    15a2:	09 c0       	rjmp	.+18     	; 0x15b6 <vfprintf+0x2d4>
    15a4:	83 2d       	mov	r24, r3
    15a6:	8e 7e       	andi	r24, 0xEE	; 238
    15a8:	a8 2e       	mov	r10, r24
    15aa:	05 c0       	rjmp	.+10     	; 0x15b6 <vfprintf+0x2d4>
    15ac:	b8 2c       	mov	r11, r8
    15ae:	a3 2c       	mov	r10, r3
    15b0:	03 c0       	rjmp	.+6      	; 0x15b8 <vfprintf+0x2d6>
    15b2:	b8 2c       	mov	r11, r8
    15b4:	01 c0       	rjmp	.+2      	; 0x15b8 <vfprintf+0x2d6>
    15b6:	b9 2c       	mov	r11, r9
    15b8:	a4 fe       	sbrs	r10, 4
    15ba:	0f c0       	rjmp	.+30     	; 0x15da <vfprintf+0x2f8>
    15bc:	fe 01       	movw	r30, r28
    15be:	e8 0d       	add	r30, r8
    15c0:	f1 1d       	adc	r31, r1
    15c2:	80 81       	ld	r24, Z
    15c4:	80 33       	cpi	r24, 0x30	; 48
    15c6:	21 f4       	brne	.+8      	; 0x15d0 <vfprintf+0x2ee>
    15c8:	9a 2d       	mov	r25, r10
    15ca:	99 7e       	andi	r25, 0xE9	; 233
    15cc:	a9 2e       	mov	r10, r25
    15ce:	09 c0       	rjmp	.+18     	; 0x15e2 <vfprintf+0x300>
    15d0:	a2 fe       	sbrs	r10, 2
    15d2:	06 c0       	rjmp	.+12     	; 0x15e0 <vfprintf+0x2fe>
    15d4:	b3 94       	inc	r11
    15d6:	b3 94       	inc	r11
    15d8:	04 c0       	rjmp	.+8      	; 0x15e2 <vfprintf+0x300>
    15da:	8a 2d       	mov	r24, r10
    15dc:	86 78       	andi	r24, 0x86	; 134
    15de:	09 f0       	breq	.+2      	; 0x15e2 <vfprintf+0x300>
    15e0:	b3 94       	inc	r11
    15e2:	a3 fc       	sbrc	r10, 3
    15e4:	11 c0       	rjmp	.+34     	; 0x1608 <vfprintf+0x326>
    15e6:	a0 fe       	sbrs	r10, 0
    15e8:	06 c0       	rjmp	.+12     	; 0x15f6 <vfprintf+0x314>
    15ea:	b2 14       	cp	r11, r2
    15ec:	88 f4       	brcc	.+34     	; 0x1610 <vfprintf+0x32e>
    15ee:	28 0c       	add	r2, r8
    15f0:	92 2c       	mov	r9, r2
    15f2:	9b 18       	sub	r9, r11
    15f4:	0e c0       	rjmp	.+28     	; 0x1612 <vfprintf+0x330>
    15f6:	b2 14       	cp	r11, r2
    15f8:	60 f4       	brcc	.+24     	; 0x1612 <vfprintf+0x330>
    15fa:	b6 01       	movw	r22, r12
    15fc:	80 e2       	ldi	r24, 0x20	; 32
    15fe:	90 e0       	ldi	r25, 0x00	; 0
    1600:	0e 94 ac 0c 	call	0x1958	; 0x1958 <fputc>
    1604:	b3 94       	inc	r11
    1606:	f7 cf       	rjmp	.-18     	; 0x15f6 <vfprintf+0x314>
    1608:	b2 14       	cp	r11, r2
    160a:	18 f4       	brcc	.+6      	; 0x1612 <vfprintf+0x330>
    160c:	2b 18       	sub	r2, r11
    160e:	02 c0       	rjmp	.+4      	; 0x1614 <vfprintf+0x332>
    1610:	98 2c       	mov	r9, r8
    1612:	21 2c       	mov	r2, r1
    1614:	a4 fe       	sbrs	r10, 4
    1616:	10 c0       	rjmp	.+32     	; 0x1638 <vfprintf+0x356>
    1618:	b6 01       	movw	r22, r12
    161a:	80 e3       	ldi	r24, 0x30	; 48
    161c:	90 e0       	ldi	r25, 0x00	; 0
    161e:	0e 94 ac 0c 	call	0x1958	; 0x1958 <fputc>
    1622:	a2 fe       	sbrs	r10, 2
    1624:	17 c0       	rjmp	.+46     	; 0x1654 <vfprintf+0x372>
    1626:	a1 fc       	sbrc	r10, 1
    1628:	03 c0       	rjmp	.+6      	; 0x1630 <vfprintf+0x34e>
    162a:	88 e7       	ldi	r24, 0x78	; 120
    162c:	90 e0       	ldi	r25, 0x00	; 0
    162e:	02 c0       	rjmp	.+4      	; 0x1634 <vfprintf+0x352>
    1630:	88 e5       	ldi	r24, 0x58	; 88
    1632:	90 e0       	ldi	r25, 0x00	; 0
    1634:	b6 01       	movw	r22, r12
    1636:	0c c0       	rjmp	.+24     	; 0x1650 <vfprintf+0x36e>
    1638:	8a 2d       	mov	r24, r10
    163a:	86 78       	andi	r24, 0x86	; 134
    163c:	59 f0       	breq	.+22     	; 0x1654 <vfprintf+0x372>
    163e:	a1 fe       	sbrs	r10, 1
    1640:	02 c0       	rjmp	.+4      	; 0x1646 <vfprintf+0x364>
    1642:	8b e2       	ldi	r24, 0x2B	; 43
    1644:	01 c0       	rjmp	.+2      	; 0x1648 <vfprintf+0x366>
    1646:	80 e2       	ldi	r24, 0x20	; 32
    1648:	a7 fc       	sbrc	r10, 7
    164a:	8d e2       	ldi	r24, 0x2D	; 45
    164c:	b6 01       	movw	r22, r12
    164e:	90 e0       	ldi	r25, 0x00	; 0
    1650:	0e 94 ac 0c 	call	0x1958	; 0x1958 <fputc>
    1654:	89 14       	cp	r8, r9
    1656:	38 f4       	brcc	.+14     	; 0x1666 <vfprintf+0x384>
    1658:	b6 01       	movw	r22, r12
    165a:	80 e3       	ldi	r24, 0x30	; 48
    165c:	90 e0       	ldi	r25, 0x00	; 0
    165e:	0e 94 ac 0c 	call	0x1958	; 0x1958 <fputc>
    1662:	9a 94       	dec	r9
    1664:	f7 cf       	rjmp	.-18     	; 0x1654 <vfprintf+0x372>
    1666:	8a 94       	dec	r8
    1668:	f3 01       	movw	r30, r6
    166a:	e8 0d       	add	r30, r8
    166c:	f1 1d       	adc	r31, r1
    166e:	80 81       	ld	r24, Z
    1670:	b6 01       	movw	r22, r12
    1672:	90 e0       	ldi	r25, 0x00	; 0
    1674:	0e 94 ac 0c 	call	0x1958	; 0x1958 <fputc>
    1678:	81 10       	cpse	r8, r1
    167a:	f5 cf       	rjmp	.-22     	; 0x1666 <vfprintf+0x384>
    167c:	22 20       	and	r2, r2
    167e:	09 f4       	brne	.+2      	; 0x1682 <vfprintf+0x3a0>
    1680:	42 ce       	rjmp	.-892    	; 0x1306 <vfprintf+0x24>
    1682:	b6 01       	movw	r22, r12
    1684:	80 e2       	ldi	r24, 0x20	; 32
    1686:	90 e0       	ldi	r25, 0x00	; 0
    1688:	0e 94 ac 0c 	call	0x1958	; 0x1958 <fputc>
    168c:	2a 94       	dec	r2
    168e:	f6 cf       	rjmp	.-20     	; 0x167c <vfprintf+0x39a>
    1690:	f6 01       	movw	r30, r12
    1692:	86 81       	ldd	r24, Z+6	; 0x06
    1694:	97 81       	ldd	r25, Z+7	; 0x07
    1696:	02 c0       	rjmp	.+4      	; 0x169c <vfprintf+0x3ba>
    1698:	8f ef       	ldi	r24, 0xFF	; 255
    169a:	9f ef       	ldi	r25, 0xFF	; 255
    169c:	2b 96       	adiw	r28, 0x0b	; 11
    169e:	e2 e1       	ldi	r30, 0x12	; 18
    16a0:	0c 94 62 0d 	jmp	0x1ac4	; 0x1ac4 <__epilogue_restores__>

000016a4 <calloc>:
    16a4:	0f 93       	push	r16
    16a6:	1f 93       	push	r17
    16a8:	cf 93       	push	r28
    16aa:	df 93       	push	r29
    16ac:	86 9f       	mul	r24, r22
    16ae:	80 01       	movw	r16, r0
    16b0:	87 9f       	mul	r24, r23
    16b2:	10 0d       	add	r17, r0
    16b4:	96 9f       	mul	r25, r22
    16b6:	10 0d       	add	r17, r0
    16b8:	11 24       	eor	r1, r1
    16ba:	c8 01       	movw	r24, r16
    16bc:	0e 94 6e 0b 	call	0x16dc	; 0x16dc <malloc>
    16c0:	ec 01       	movw	r28, r24
    16c2:	00 97       	sbiw	r24, 0x00	; 0
    16c4:	29 f0       	breq	.+10     	; 0x16d0 <calloc+0x2c>
    16c6:	a8 01       	movw	r20, r16
    16c8:	60 e0       	ldi	r22, 0x00	; 0
    16ca:	70 e0       	ldi	r23, 0x00	; 0
    16cc:	0e 94 9a 0c 	call	0x1934	; 0x1934 <memset>
    16d0:	ce 01       	movw	r24, r28
    16d2:	df 91       	pop	r29
    16d4:	cf 91       	pop	r28
    16d6:	1f 91       	pop	r17
    16d8:	0f 91       	pop	r16
    16da:	08 95       	ret

000016dc <malloc>:
    16dc:	0f 93       	push	r16
    16de:	1f 93       	push	r17
    16e0:	cf 93       	push	r28
    16e2:	df 93       	push	r29
    16e4:	82 30       	cpi	r24, 0x02	; 2
    16e6:	91 05       	cpc	r25, r1
    16e8:	10 f4       	brcc	.+4      	; 0x16ee <malloc+0x12>
    16ea:	82 e0       	ldi	r24, 0x02	; 2
    16ec:	90 e0       	ldi	r25, 0x00	; 0
    16ee:	e0 91 30 02 	lds	r30, 0x0230	; 0x800230 <__flp>
    16f2:	f0 91 31 02 	lds	r31, 0x0231	; 0x800231 <__flp+0x1>
    16f6:	20 e0       	ldi	r18, 0x00	; 0
    16f8:	30 e0       	ldi	r19, 0x00	; 0
    16fa:	a0 e0       	ldi	r26, 0x00	; 0
    16fc:	b0 e0       	ldi	r27, 0x00	; 0
    16fe:	30 97       	sbiw	r30, 0x00	; 0
    1700:	19 f1       	breq	.+70     	; 0x1748 <malloc+0x6c>
    1702:	40 81       	ld	r20, Z
    1704:	51 81       	ldd	r21, Z+1	; 0x01
    1706:	02 81       	ldd	r16, Z+2	; 0x02
    1708:	13 81       	ldd	r17, Z+3	; 0x03
    170a:	48 17       	cp	r20, r24
    170c:	59 07       	cpc	r21, r25
    170e:	c8 f0       	brcs	.+50     	; 0x1742 <malloc+0x66>
    1710:	84 17       	cp	r24, r20
    1712:	95 07       	cpc	r25, r21
    1714:	69 f4       	brne	.+26     	; 0x1730 <malloc+0x54>
    1716:	10 97       	sbiw	r26, 0x00	; 0
    1718:	31 f0       	breq	.+12     	; 0x1726 <malloc+0x4a>
    171a:	12 96       	adiw	r26, 0x02	; 2
    171c:	0c 93       	st	X, r16
    171e:	12 97       	sbiw	r26, 0x02	; 2
    1720:	13 96       	adiw	r26, 0x03	; 3
    1722:	1c 93       	st	X, r17
    1724:	27 c0       	rjmp	.+78     	; 0x1774 <malloc+0x98>
    1726:	00 93 30 02 	sts	0x0230, r16	; 0x800230 <__flp>
    172a:	10 93 31 02 	sts	0x0231, r17	; 0x800231 <__flp+0x1>
    172e:	22 c0       	rjmp	.+68     	; 0x1774 <malloc+0x98>
    1730:	21 15       	cp	r18, r1
    1732:	31 05       	cpc	r19, r1
    1734:	19 f0       	breq	.+6      	; 0x173c <malloc+0x60>
    1736:	42 17       	cp	r20, r18
    1738:	53 07       	cpc	r21, r19
    173a:	18 f4       	brcc	.+6      	; 0x1742 <malloc+0x66>
    173c:	9a 01       	movw	r18, r20
    173e:	bd 01       	movw	r22, r26
    1740:	ef 01       	movw	r28, r30
    1742:	df 01       	movw	r26, r30
    1744:	f8 01       	movw	r30, r16
    1746:	db cf       	rjmp	.-74     	; 0x16fe <malloc+0x22>
    1748:	21 15       	cp	r18, r1
    174a:	31 05       	cpc	r19, r1
    174c:	f9 f0       	breq	.+62     	; 0x178c <malloc+0xb0>
    174e:	28 1b       	sub	r18, r24
    1750:	39 0b       	sbc	r19, r25
    1752:	24 30       	cpi	r18, 0x04	; 4
    1754:	31 05       	cpc	r19, r1
    1756:	80 f4       	brcc	.+32     	; 0x1778 <malloc+0x9c>
    1758:	8a 81       	ldd	r24, Y+2	; 0x02
    175a:	9b 81       	ldd	r25, Y+3	; 0x03
    175c:	61 15       	cp	r22, r1
    175e:	71 05       	cpc	r23, r1
    1760:	21 f0       	breq	.+8      	; 0x176a <malloc+0x8e>
    1762:	fb 01       	movw	r30, r22
    1764:	93 83       	std	Z+3, r25	; 0x03
    1766:	82 83       	std	Z+2, r24	; 0x02
    1768:	04 c0       	rjmp	.+8      	; 0x1772 <malloc+0x96>
    176a:	90 93 31 02 	sts	0x0231, r25	; 0x800231 <__flp+0x1>
    176e:	80 93 30 02 	sts	0x0230, r24	; 0x800230 <__flp>
    1772:	fe 01       	movw	r30, r28
    1774:	32 96       	adiw	r30, 0x02	; 2
    1776:	44 c0       	rjmp	.+136    	; 0x1800 <malloc+0x124>
    1778:	fe 01       	movw	r30, r28
    177a:	e2 0f       	add	r30, r18
    177c:	f3 1f       	adc	r31, r19
    177e:	81 93       	st	Z+, r24
    1780:	91 93       	st	Z+, r25
    1782:	22 50       	subi	r18, 0x02	; 2
    1784:	31 09       	sbc	r19, r1
    1786:	39 83       	std	Y+1, r19	; 0x01
    1788:	28 83       	st	Y, r18
    178a:	3a c0       	rjmp	.+116    	; 0x1800 <malloc+0x124>
    178c:	20 91 2e 02 	lds	r18, 0x022E	; 0x80022e <__brkval>
    1790:	30 91 2f 02 	lds	r19, 0x022F	; 0x80022f <__brkval+0x1>
    1794:	23 2b       	or	r18, r19
    1796:	41 f4       	brne	.+16     	; 0x17a8 <malloc+0xcc>
    1798:	20 91 02 01 	lds	r18, 0x0102	; 0x800102 <__malloc_heap_start>
    179c:	30 91 03 01 	lds	r19, 0x0103	; 0x800103 <__malloc_heap_start+0x1>
    17a0:	30 93 2f 02 	sts	0x022F, r19	; 0x80022f <__brkval+0x1>
    17a4:	20 93 2e 02 	sts	0x022E, r18	; 0x80022e <__brkval>
    17a8:	20 91 00 01 	lds	r18, 0x0100	; 0x800100 <__data_start>
    17ac:	30 91 01 01 	lds	r19, 0x0101	; 0x800101 <__data_start+0x1>
    17b0:	21 15       	cp	r18, r1
    17b2:	31 05       	cpc	r19, r1
    17b4:	41 f4       	brne	.+16     	; 0x17c6 <malloc+0xea>
    17b6:	2d b7       	in	r18, 0x3d	; 61
    17b8:	3e b7       	in	r19, 0x3e	; 62
    17ba:	40 91 04 01 	lds	r20, 0x0104	; 0x800104 <__malloc_margin>
    17be:	50 91 05 01 	lds	r21, 0x0105	; 0x800105 <__malloc_margin+0x1>
    17c2:	24 1b       	sub	r18, r20
    17c4:	35 0b       	sbc	r19, r21
    17c6:	e0 91 2e 02 	lds	r30, 0x022E	; 0x80022e <__brkval>
    17ca:	f0 91 2f 02 	lds	r31, 0x022F	; 0x80022f <__brkval+0x1>
    17ce:	e2 17       	cp	r30, r18
    17d0:	f3 07       	cpc	r31, r19
    17d2:	a0 f4       	brcc	.+40     	; 0x17fc <malloc+0x120>
    17d4:	2e 1b       	sub	r18, r30
    17d6:	3f 0b       	sbc	r19, r31
    17d8:	28 17       	cp	r18, r24
    17da:	39 07       	cpc	r19, r25
    17dc:	78 f0       	brcs	.+30     	; 0x17fc <malloc+0x120>
    17de:	ac 01       	movw	r20, r24
    17e0:	4e 5f       	subi	r20, 0xFE	; 254
    17e2:	5f 4f       	sbci	r21, 0xFF	; 255
    17e4:	24 17       	cp	r18, r20
    17e6:	35 07       	cpc	r19, r21
    17e8:	48 f0       	brcs	.+18     	; 0x17fc <malloc+0x120>
    17ea:	4e 0f       	add	r20, r30
    17ec:	5f 1f       	adc	r21, r31
    17ee:	50 93 2f 02 	sts	0x022F, r21	; 0x80022f <__brkval+0x1>
    17f2:	40 93 2e 02 	sts	0x022E, r20	; 0x80022e <__brkval>
    17f6:	81 93       	st	Z+, r24
    17f8:	91 93       	st	Z+, r25
    17fa:	02 c0       	rjmp	.+4      	; 0x1800 <malloc+0x124>
    17fc:	e0 e0       	ldi	r30, 0x00	; 0
    17fe:	f0 e0       	ldi	r31, 0x00	; 0
    1800:	cf 01       	movw	r24, r30
    1802:	df 91       	pop	r29
    1804:	cf 91       	pop	r28
    1806:	1f 91       	pop	r17
    1808:	0f 91       	pop	r16
    180a:	08 95       	ret

0000180c <free>:
    180c:	cf 93       	push	r28
    180e:	df 93       	push	r29
    1810:	00 97       	sbiw	r24, 0x00	; 0
    1812:	09 f4       	brne	.+2      	; 0x1816 <free+0xa>
    1814:	81 c0       	rjmp	.+258    	; 0x1918 <free+0x10c>
    1816:	fc 01       	movw	r30, r24
    1818:	32 97       	sbiw	r30, 0x02	; 2
    181a:	13 82       	std	Z+3, r1	; 0x03
    181c:	12 82       	std	Z+2, r1	; 0x02
    181e:	a0 91 30 02 	lds	r26, 0x0230	; 0x800230 <__flp>
    1822:	b0 91 31 02 	lds	r27, 0x0231	; 0x800231 <__flp+0x1>
    1826:	10 97       	sbiw	r26, 0x00	; 0
    1828:	81 f4       	brne	.+32     	; 0x184a <free+0x3e>
    182a:	20 81       	ld	r18, Z
    182c:	31 81       	ldd	r19, Z+1	; 0x01
    182e:	82 0f       	add	r24, r18
    1830:	93 1f       	adc	r25, r19
    1832:	20 91 2e 02 	lds	r18, 0x022E	; 0x80022e <__brkval>
    1836:	30 91 2f 02 	lds	r19, 0x022F	; 0x80022f <__brkval+0x1>
    183a:	28 17       	cp	r18, r24
    183c:	39 07       	cpc	r19, r25
    183e:	51 f5       	brne	.+84     	; 0x1894 <free+0x88>
    1840:	f0 93 2f 02 	sts	0x022F, r31	; 0x80022f <__brkval+0x1>
    1844:	e0 93 2e 02 	sts	0x022E, r30	; 0x80022e <__brkval>
    1848:	67 c0       	rjmp	.+206    	; 0x1918 <free+0x10c>
    184a:	ed 01       	movw	r28, r26
    184c:	20 e0       	ldi	r18, 0x00	; 0
    184e:	30 e0       	ldi	r19, 0x00	; 0
    1850:	ce 17       	cp	r28, r30
    1852:	df 07       	cpc	r29, r31
    1854:	40 f4       	brcc	.+16     	; 0x1866 <free+0x5a>
    1856:	4a 81       	ldd	r20, Y+2	; 0x02
    1858:	5b 81       	ldd	r21, Y+3	; 0x03
    185a:	9e 01       	movw	r18, r28
    185c:	41 15       	cp	r20, r1
    185e:	51 05       	cpc	r21, r1
    1860:	f1 f0       	breq	.+60     	; 0x189e <free+0x92>
    1862:	ea 01       	movw	r28, r20
    1864:	f5 cf       	rjmp	.-22     	; 0x1850 <free+0x44>
    1866:	d3 83       	std	Z+3, r29	; 0x03
    1868:	c2 83       	std	Z+2, r28	; 0x02
    186a:	40 81       	ld	r20, Z
    186c:	51 81       	ldd	r21, Z+1	; 0x01
    186e:	84 0f       	add	r24, r20
    1870:	95 1f       	adc	r25, r21
    1872:	c8 17       	cp	r28, r24
    1874:	d9 07       	cpc	r29, r25
    1876:	59 f4       	brne	.+22     	; 0x188e <free+0x82>
    1878:	88 81       	ld	r24, Y
    187a:	99 81       	ldd	r25, Y+1	; 0x01
    187c:	84 0f       	add	r24, r20
    187e:	95 1f       	adc	r25, r21
    1880:	02 96       	adiw	r24, 0x02	; 2
    1882:	91 83       	std	Z+1, r25	; 0x01
    1884:	80 83       	st	Z, r24
    1886:	8a 81       	ldd	r24, Y+2	; 0x02
    1888:	9b 81       	ldd	r25, Y+3	; 0x03
    188a:	93 83       	std	Z+3, r25	; 0x03
    188c:	82 83       	std	Z+2, r24	; 0x02
    188e:	21 15       	cp	r18, r1
    1890:	31 05       	cpc	r19, r1
    1892:	29 f4       	brne	.+10     	; 0x189e <free+0x92>
    1894:	f0 93 31 02 	sts	0x0231, r31	; 0x800231 <__flp+0x1>
    1898:	e0 93 30 02 	sts	0x0230, r30	; 0x800230 <__flp>
    189c:	3d c0       	rjmp	.+122    	; 0x1918 <free+0x10c>
    189e:	e9 01       	movw	r28, r18
    18a0:	fb 83       	std	Y+3, r31	; 0x03
    18a2:	ea 83       	std	Y+2, r30	; 0x02
    18a4:	49 91       	ld	r20, Y+
    18a6:	59 91       	ld	r21, Y+
    18a8:	c4 0f       	add	r28, r20
    18aa:	d5 1f       	adc	r29, r21
    18ac:	ec 17       	cp	r30, r28
    18ae:	fd 07       	cpc	r31, r29
    18b0:	61 f4       	brne	.+24     	; 0x18ca <free+0xbe>
    18b2:	80 81       	ld	r24, Z
    18b4:	91 81       	ldd	r25, Z+1	; 0x01
    18b6:	84 0f       	add	r24, r20
    18b8:	95 1f       	adc	r25, r21
    18ba:	02 96       	adiw	r24, 0x02	; 2
    18bc:	e9 01       	movw	r28, r18
    18be:	99 83       	std	Y+1, r25	; 0x01
    18c0:	88 83       	st	Y, r24
    18c2:	82 81       	ldd	r24, Z+2	; 0x02
    18c4:	93 81       	ldd	r25, Z+3	; 0x03
    18c6:	9b 83       	std	Y+3, r25	; 0x03
    18c8:	8a 83       	std	Y+2, r24	; 0x02
    18ca:	e0 e0       	ldi	r30, 0x00	; 0
    18cc:	f0 e0       	ldi	r31, 0x00	; 0
    18ce:	12 96       	adiw	r26, 0x02	; 2
    18d0:	8d 91       	ld	r24, X+
    18d2:	9c 91       	ld	r25, X
    18d4:	13 97       	sbiw	r26, 0x03	; 3
    18d6:	00 97       	sbiw	r24, 0x00	; 0
    18d8:	19 f0       	breq	.+6      	; 0x18e0 <free+0xd4>
    18da:	fd 01       	movw	r30, r26
    18dc:	dc 01       	movw	r26, r24
    18de:	f7 cf       	rjmp	.-18     	; 0x18ce <free+0xc2>
    18e0:	8d 91       	ld	r24, X+
    18e2:	9c 91       	ld	r25, X
    18e4:	11 97       	sbiw	r26, 0x01	; 1
    18e6:	9d 01       	movw	r18, r26
    18e8:	2e 5f       	subi	r18, 0xFE	; 254
    18ea:	3f 4f       	sbci	r19, 0xFF	; 255
    18ec:	82 0f       	add	r24, r18
    18ee:	93 1f       	adc	r25, r19
    18f0:	20 91 2e 02 	lds	r18, 0x022E	; 0x80022e <__brkval>
    18f4:	30 91 2f 02 	lds	r19, 0x022F	; 0x80022f <__brkval+0x1>
    18f8:	28 17       	cp	r18, r24
    18fa:	39 07       	cpc	r19, r25
    18fc:	69 f4       	brne	.+26     	; 0x1918 <free+0x10c>
    18fe:	30 97       	sbiw	r30, 0x00	; 0
    1900:	29 f4       	brne	.+10     	; 0x190c <free+0x100>
    1902:	10 92 31 02 	sts	0x0231, r1	; 0x800231 <__flp+0x1>
    1906:	10 92 30 02 	sts	0x0230, r1	; 0x800230 <__flp>
    190a:	02 c0       	rjmp	.+4      	; 0x1910 <free+0x104>
    190c:	13 82       	std	Z+3, r1	; 0x03
    190e:	12 82       	std	Z+2, r1	; 0x02
    1910:	b0 93 2f 02 	sts	0x022F, r27	; 0x80022f <__brkval+0x1>
    1914:	a0 93 2e 02 	sts	0x022E, r26	; 0x80022e <__brkval>
    1918:	df 91       	pop	r29
    191a:	cf 91       	pop	r28
    191c:	08 95       	ret

0000191e <strnlen_P>:
    191e:	fc 01       	movw	r30, r24
    1920:	05 90       	lpm	r0, Z+
    1922:	61 50       	subi	r22, 0x01	; 1
    1924:	70 40       	sbci	r23, 0x00	; 0
    1926:	01 10       	cpse	r0, r1
    1928:	d8 f7       	brcc	.-10     	; 0x1920 <strnlen_P+0x2>
    192a:	80 95       	com	r24
    192c:	90 95       	com	r25
    192e:	8e 0f       	add	r24, r30
    1930:	9f 1f       	adc	r25, r31
    1932:	08 95       	ret

00001934 <memset>:
    1934:	dc 01       	movw	r26, r24
    1936:	01 c0       	rjmp	.+2      	; 0x193a <memset+0x6>
    1938:	6d 93       	st	X+, r22
    193a:	41 50       	subi	r20, 0x01	; 1
    193c:	50 40       	sbci	r21, 0x00	; 0
    193e:	e0 f7       	brcc	.-8      	; 0x1938 <memset+0x4>
    1940:	08 95       	ret

00001942 <strnlen>:
    1942:	fc 01       	movw	r30, r24
    1944:	61 50       	subi	r22, 0x01	; 1
    1946:	70 40       	sbci	r23, 0x00	; 0
    1948:	01 90       	ld	r0, Z+
    194a:	01 10       	cpse	r0, r1
    194c:	d8 f7       	brcc	.-10     	; 0x1944 <strnlen+0x2>
    194e:	80 95       	com	r24
    1950:	90 95       	com	r25
    1952:	8e 0f       	add	r24, r30
    1954:	9f 1f       	adc	r25, r31
    1956:	08 95       	ret

00001958 <fputc>:
    1958:	0f 93       	push	r16
    195a:	1f 93       	push	r17
    195c:	cf 93       	push	r28
    195e:	df 93       	push	r29
    1960:	fb 01       	movw	r30, r22
    1962:	23 81       	ldd	r18, Z+3	; 0x03
    1964:	21 fd       	sbrc	r18, 1
    1966:	03 c0       	rjmp	.+6      	; 0x196e <fputc+0x16>
    1968:	8f ef       	ldi	r24, 0xFF	; 255
    196a:	9f ef       	ldi	r25, 0xFF	; 255
    196c:	2c c0       	rjmp	.+88     	; 0x19c6 <fputc+0x6e>
    196e:	22 ff       	sbrs	r18, 2
    1970:	16 c0       	rjmp	.+44     	; 0x199e <fputc+0x46>
    1972:	46 81       	ldd	r20, Z+6	; 0x06
    1974:	57 81       	ldd	r21, Z+7	; 0x07
    1976:	24 81       	ldd	r18, Z+4	; 0x04
    1978:	35 81       	ldd	r19, Z+5	; 0x05
    197a:	42 17       	cp	r20, r18
    197c:	53 07       	cpc	r21, r19
    197e:	44 f4       	brge	.+16     	; 0x1990 <fputc+0x38>
    1980:	a0 81       	ld	r26, Z
    1982:	b1 81       	ldd	r27, Z+1	; 0x01
    1984:	9d 01       	movw	r18, r26
    1986:	2f 5f       	subi	r18, 0xFF	; 255
    1988:	3f 4f       	sbci	r19, 0xFF	; 255
    198a:	31 83       	std	Z+1, r19	; 0x01
    198c:	20 83       	st	Z, r18
    198e:	8c 93       	st	X, r24
    1990:	26 81       	ldd	r18, Z+6	; 0x06
    1992:	37 81       	ldd	r19, Z+7	; 0x07
    1994:	2f 5f       	subi	r18, 0xFF	; 255
    1996:	3f 4f       	sbci	r19, 0xFF	; 255
    1998:	37 83       	std	Z+7, r19	; 0x07
    199a:	26 83       	std	Z+6, r18	; 0x06
    199c:	14 c0       	rjmp	.+40     	; 0x19c6 <fputc+0x6e>
    199e:	8b 01       	movw	r16, r22
    19a0:	ec 01       	movw	r28, r24
    19a2:	fb 01       	movw	r30, r22
    19a4:	00 84       	ldd	r0, Z+8	; 0x08
    19a6:	f1 85       	ldd	r31, Z+9	; 0x09
    19a8:	e0 2d       	mov	r30, r0
    19aa:	09 95       	icall
    19ac:	89 2b       	or	r24, r25
    19ae:	e1 f6       	brne	.-72     	; 0x1968 <fputc+0x10>
    19b0:	d8 01       	movw	r26, r16
    19b2:	16 96       	adiw	r26, 0x06	; 6
    19b4:	8d 91       	ld	r24, X+
    19b6:	9c 91       	ld	r25, X
    19b8:	17 97       	sbiw	r26, 0x07	; 7
    19ba:	01 96       	adiw	r24, 0x01	; 1
    19bc:	17 96       	adiw	r26, 0x07	; 7
    19be:	9c 93       	st	X, r25
    19c0:	8e 93       	st	-X, r24
    19c2:	16 97       	sbiw	r26, 0x06	; 6
    19c4:	ce 01       	movw	r24, r28
    19c6:	df 91       	pop	r29
    19c8:	cf 91       	pop	r28
    19ca:	1f 91       	pop	r17
    19cc:	0f 91       	pop	r16
    19ce:	08 95       	ret

000019d0 <__ultoa_invert>:
    19d0:	fa 01       	movw	r30, r20
    19d2:	aa 27       	eor	r26, r26
    19d4:	28 30       	cpi	r18, 0x08	; 8
    19d6:	51 f1       	breq	.+84     	; 0x1a2c <__ultoa_invert+0x5c>
    19d8:	20 31       	cpi	r18, 0x10	; 16
    19da:	81 f1       	breq	.+96     	; 0x1a3c <__ultoa_invert+0x6c>
    19dc:	e8 94       	clt
    19de:	6f 93       	push	r22
    19e0:	6e 7f       	andi	r22, 0xFE	; 254
    19e2:	6e 5f       	subi	r22, 0xFE	; 254
    19e4:	7f 4f       	sbci	r23, 0xFF	; 255
    19e6:	8f 4f       	sbci	r24, 0xFF	; 255
    19e8:	9f 4f       	sbci	r25, 0xFF	; 255
    19ea:	af 4f       	sbci	r26, 0xFF	; 255
    19ec:	b1 e0       	ldi	r27, 0x01	; 1
    19ee:	3e d0       	rcall	.+124    	; 0x1a6c <__ultoa_invert+0x9c>
    19f0:	b4 e0       	ldi	r27, 0x04	; 4
    19f2:	3c d0       	rcall	.+120    	; 0x1a6c <__ultoa_invert+0x9c>
    19f4:	67 0f       	add	r22, r23
    19f6:	78 1f       	adc	r23, r24
    19f8:	89 1f       	adc	r24, r25
    19fa:	9a 1f       	adc	r25, r26
    19fc:	a1 1d       	adc	r26, r1
    19fe:	68 0f       	add	r22, r24
    1a00:	79 1f       	adc	r23, r25
    1a02:	8a 1f       	adc	r24, r26
    1a04:	91 1d       	adc	r25, r1
    1a06:	a1 1d       	adc	r26, r1
    1a08:	6a 0f       	add	r22, r26
    1a0a:	71 1d       	adc	r23, r1
    1a0c:	81 1d       	adc	r24, r1
    1a0e:	91 1d       	adc	r25, r1
    1a10:	a1 1d       	adc	r26, r1
    1a12:	20 d0       	rcall	.+64     	; 0x1a54 <__ultoa_invert+0x84>
    1a14:	09 f4       	brne	.+2      	; 0x1a18 <__ultoa_invert+0x48>
    1a16:	68 94       	set
    1a18:	3f 91       	pop	r19
    1a1a:	2a e0       	ldi	r18, 0x0A	; 10
    1a1c:	26 9f       	mul	r18, r22
    1a1e:	11 24       	eor	r1, r1
    1a20:	30 19       	sub	r19, r0
    1a22:	30 5d       	subi	r19, 0xD0	; 208
    1a24:	31 93       	st	Z+, r19
    1a26:	de f6       	brtc	.-74     	; 0x19de <__ultoa_invert+0xe>
    1a28:	cf 01       	movw	r24, r30
    1a2a:	08 95       	ret
    1a2c:	46 2f       	mov	r20, r22
    1a2e:	47 70       	andi	r20, 0x07	; 7
    1a30:	40 5d       	subi	r20, 0xD0	; 208
    1a32:	41 93       	st	Z+, r20
    1a34:	b3 e0       	ldi	r27, 0x03	; 3
    1a36:	0f d0       	rcall	.+30     	; 0x1a56 <__ultoa_invert+0x86>
    1a38:	c9 f7       	brne	.-14     	; 0x1a2c <__ultoa_invert+0x5c>
    1a3a:	f6 cf       	rjmp	.-20     	; 0x1a28 <__ultoa_invert+0x58>
    1a3c:	46 2f       	mov	r20, r22
    1a3e:	4f 70       	andi	r20, 0x0F	; 15
    1a40:	40 5d       	subi	r20, 0xD0	; 208
    1a42:	4a 33       	cpi	r20, 0x3A	; 58
    1a44:	18 f0       	brcs	.+6      	; 0x1a4c <__ultoa_invert+0x7c>
    1a46:	49 5d       	subi	r20, 0xD9	; 217
    1a48:	31 fd       	sbrc	r19, 1
    1a4a:	40 52       	subi	r20, 0x20	; 32
    1a4c:	41 93       	st	Z+, r20
    1a4e:	02 d0       	rcall	.+4      	; 0x1a54 <__ultoa_invert+0x84>
    1a50:	a9 f7       	brne	.-22     	; 0x1a3c <__ultoa_invert+0x6c>
    1a52:	ea cf       	rjmp	.-44     	; 0x1a28 <__ultoa_invert+0x58>
    1a54:	b4 e0       	ldi	r27, 0x04	; 4
    1a56:	a6 95       	lsr	r26
    1a58:	97 95       	ror	r25
    1a5a:	87 95       	ror	r24
    1a5c:	77 95       	ror	r23
    1a5e:	67 95       	ror	r22
    1a60:	ba 95       	dec	r27
    1a62:	c9 f7       	brne	.-14     	; 0x1a56 <__ultoa_invert+0x86>
    1a64:	00 97       	sbiw	r24, 0x00	; 0
    1a66:	61 05       	cpc	r22, r1
    1a68:	71 05       	cpc	r23, r1
    1a6a:	08 95       	ret
    1a6c:	9b 01       	movw	r18, r22
    1a6e:	ac 01       	movw	r20, r24
    1a70:	0a 2e       	mov	r0, r26
    1a72:	06 94       	lsr	r0
    1a74:	57 95       	ror	r21
    1a76:	47 95       	ror	r20
    1a78:	37 95       	ror	r19
    1a7a:	27 95       	ror	r18
    1a7c:	ba 95       	dec	r27
    1a7e:	c9 f7       	brne	.-14     	; 0x1a72 <__ultoa_invert+0xa2>
    1a80:	62 0f       	add	r22, r18
    1a82:	73 1f       	adc	r23, r19
    1a84:	84 1f       	adc	r24, r20
    1a86:	95 1f       	adc	r25, r21
    1a88:	a0 1d       	adc	r26, r0
    1a8a:	08 95       	ret

00001a8c <__prologue_saves__>:
    1a8c:	2f 92       	push	r2
    1a8e:	3f 92       	push	r3
    1a90:	4f 92       	push	r4
    1a92:	5f 92       	push	r5
    1a94:	6f 92       	push	r6
    1a96:	7f 92       	push	r7
    1a98:	8f 92       	push	r8
    1a9a:	9f 92       	push	r9
    1a9c:	af 92       	push	r10
    1a9e:	bf 92       	push	r11
    1aa0:	cf 92       	push	r12
    1aa2:	df 92       	push	r13
    1aa4:	ef 92       	push	r14
    1aa6:	ff 92       	push	r15
    1aa8:	0f 93       	push	r16
    1aaa:	1f 93       	push	r17
    1aac:	cf 93       	push	r28
    1aae:	df 93       	push	r29
    1ab0:	cd b7       	in	r28, 0x3d	; 61
    1ab2:	de b7       	in	r29, 0x3e	; 62
    1ab4:	ca 1b       	sub	r28, r26
    1ab6:	db 0b       	sbc	r29, r27
    1ab8:	0f b6       	in	r0, 0x3f	; 63
    1aba:	f8 94       	cli
    1abc:	de bf       	out	0x3e, r29	; 62
    1abe:	0f be       	out	0x3f, r0	; 63
    1ac0:	cd bf       	out	0x3d, r28	; 61
    1ac2:	09 94       	ijmp

00001ac4 <__epilogue_restores__>:
    1ac4:	2a 88       	ldd	r2, Y+18	; 0x12
    1ac6:	39 88       	ldd	r3, Y+17	; 0x11
    1ac8:	48 88       	ldd	r4, Y+16	; 0x10
    1aca:	5f 84       	ldd	r5, Y+15	; 0x0f
    1acc:	6e 84       	ldd	r6, Y+14	; 0x0e
    1ace:	7d 84       	ldd	r7, Y+13	; 0x0d
    1ad0:	8c 84       	ldd	r8, Y+12	; 0x0c
    1ad2:	9b 84       	ldd	r9, Y+11	; 0x0b
    1ad4:	aa 84       	ldd	r10, Y+10	; 0x0a
    1ad6:	b9 84       	ldd	r11, Y+9	; 0x09
    1ad8:	c8 84       	ldd	r12, Y+8	; 0x08
    1ada:	df 80       	ldd	r13, Y+7	; 0x07
    1adc:	ee 80       	ldd	r14, Y+6	; 0x06
    1ade:	fd 80       	ldd	r15, Y+5	; 0x05
    1ae0:	0c 81       	ldd	r16, Y+4	; 0x04
    1ae2:	1b 81       	ldd	r17, Y+3	; 0x03
    1ae4:	aa 81       	ldd	r26, Y+2	; 0x02
    1ae6:	b9 81       	ldd	r27, Y+1	; 0x01
    1ae8:	ce 0f       	add	r28, r30
    1aea:	d1 1d       	adc	r29, r1
    1aec:	0f b6       	in	r0, 0x3f	; 63
    1aee:	f8 94       	cli
    1af0:	de bf       	out	0x3e, r29	; 62
    1af2:	0f be       	out	0x3f, r0	; 63
    1af4:	cd bf       	out	0x3d, r28	; 61
    1af6:	ed 01       	movw	r28, r26
    1af8:	08 95       	ret

00001afa <_exit>:
    1afa:	f8 94       	cli

00001afc <__stop_program>:
    1afc:	ff cf       	rjmp	.-2      	; 0x1afc <__stop_program>
